{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\construction-app\\\\src\\\\components\\\\inward\\\\CreateBatchSlip.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBatchSlip = ({\n  onNavigate\n}) => {\n  _s();\n  const [batchSlips, setBatchSlips] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    // Header Information\n    plantSerialNumber: \"3494\",\n    batchDate: new Date().toISOString().split(\"T\")[0],\n    batchStartTime: \"\",\n    batchEndTime: \"\",\n    batchNumber: \"\",\n    customer: \"\",\n    site: \"\",\n    recipeCode: \"\",\n    recipeName: \"\",\n    truckNumber: \"\",\n    truckDriver: \"\",\n    orderNumber: \"\",\n    batcherName: \"\",\n    // Quantities\n    orderedQuantity: \"\",\n    productionQuantity: \"\",\n    adjManualQuantity: \"\",\n    withThisLoad: 0,\n    mixerCapacity: \"\",\n    batchSize: \"\",\n    // Material Data - 20 rows as shown in image\n    materialData: Array(20).fill().map(() => ({\n      sand: \"145.00\",\n      mm40: \"75.00\",\n      mm20: \"150.00\",\n      mm0: \"0.00\",\n      cem1: \"25.00\",\n      cem2: \"25.00\",\n      cem3: \"25.00\",\n      water: \"45.00\",\n      admix1: \"0.38\"\n    })),\n    // Totals\n    totalSand: \"1500.00\",\n    totalMm40: \"3000.00\",\n    totalMm20: \"0.00\",\n    totalCem1: \"500.00\",\n    totalCem2: \"500.00\",\n    totalCem3: \"500.00\",\n    totalWater: \"900.00\",\n    totalAdmix1: \"7.50\",\n    // Client Information for Invoice\n    clientName: \"\",\n    clientAddress: \"\",\n    clientEmail: \"\",\n    clientPhone: \"+91\",\n    clientGSTIN: \"\",\n    // Invoice Details\n    description: \"Concrete M30\",\n    hsn: \"6810\",\n    rate: \"4000.00\",\n    quantity: \"15.00\",\n    unit: \"M³\"\n  });\n  const [errors, setErrors] = useState({});\n\n  // Generate batch number automatically\n  useEffect(() => {\n    if (!formData.batchNumber) {\n      setFormData(prev => ({\n        ...prev,\n        batchNumber: generateBatchNumber()\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    fetchInvoices();\n  }, []);\n  const generateBatchNumber = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const sequence = String(Math.floor(Math.random() * 1000) + 1).padStart(3, \"0\");\n    return `${year}${month}${day}${sequence}`;\n  };\n  const fetchInvoices = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/invoices\");\n      const data = await response.json();\n      setBatchSlips(data); // Using same state for invoices\n    } catch (error) {\n      console.error(\"Error fetching invoices:\", error);\n    }\n  };\n  const sendBatchSlip = batchSlip => {\n    if (isLoading) return;\n    sendToWhatsApp(\"batchslip\", batchSlip);\n  };\n\n  // Dynamic import for PDF libraries to avoid SSR issues\n  const loadPDFLibraries = async () => {\n    try {\n      const jsPDF = (await import(\"jspdf\")).default;\n      const autoTable = (await import(\"jspdf-autotable\")).default;\n      return {\n        jsPDF,\n        autoTable\n      };\n    } catch (error) {\n      console.error(\"Failed to load PDF libraries:\", error);\n      throw new Error(\"PDF libraries not available\");\n    }\n  };\n  const generateInvoicePDF = async invoice => {\n    try {\n      const {\n        jsPDF,\n        autoTable\n      } = await loadPDFLibraries();\n      const doc = new jsPDF();\n\n      // Header\n      doc.setFontSize(16);\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"RR CONSTRUCTIONS\", 20, 20);\n      doc.text(\"Tax Invoice\", 150, 20);\n      doc.setFontSize(10);\n      doc.setFont(undefined, \"normal\");\n      doc.text(\"GSTIN: 33AAGFT4474P1Z1\", 20, 30);\n      doc.text(`Invoice No: ${invoice.invoiceNumber}`, 150, 30);\n      doc.text(\"Excel College Campus, NH 91, Mathura\", 20, 35);\n      doc.text(`Date: ${new Date(invoice.createdAt).toLocaleDateString()}`, 150, 35);\n      doc.text(\"Road, Haryana - 121102\", 20, 40);\n      doc.text(`Batch Number: ${invoice.batchNumber}`, 150, 40);\n      doc.text(\"GST/NSN: 33AAGFT4474P1Z1\", 20, 45);\n      doc.text(\"Terms of Delivery: As per Order &\", 150, 45);\n      doc.text(\"Biller: INFRA LP\", 20, 50);\n      doc.text(\"Cheque\", 150, 50);\n      doc.text(\"State Name: Tamil Nadu, India\", 20, 55);\n\n      // Bill To section\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"Bill To:\", 20, 70);\n      doc.text(\"Dispatch Site:\", 150, 70);\n      doc.setFont(undefined, \"normal\");\n      doc.text(invoice.clientName, 20, 80);\n      doc.text(\"N/A\", 150, 80);\n      doc.text(invoice.clientAddress, 20, 85);\n      doc.text(\"Bill of Lading/Ref No: N/A\", 150, 85);\n      doc.text(`GSTIN: ${invoice.clientGSTIN || \"N/A\"}`, 20, 90);\n\n      // Table using autoTable\n      const tableData = [[invoice.description, invoice.hsn, invoice.quantity, `₹${invoice.rate}`,\n      // ✅ Fixed\n      invoice.unit, `₹${invoice.total}` // ✅ Fixed\n      ]];\n      autoTable(doc, {\n        startY: 100,\n        head: [[\"Description\", \"HSN\", \"Quantity\", \"Rate\", \"Per\", \"Amount\"]],\n        body: tableData,\n        theme: \"grid\"\n      });\n\n      // Totals\n      const finalY = doc.lastAutoTable.finalY + 10;\n      doc.text(`Total: ₹${invoice.total}`, 150, finalY);\n      doc.text(`Output-CGST @ 9%: ₹${invoice.cgst}`, 150, finalY + 10);\n      doc.text(`Output-SGST @ 9%: ₹${invoice.sgst}`, 150, finalY + 20);\n      doc.setFont(undefined, \"bold\");\n      doc.text(`Grand Total: ₹${invoice.grandTotal}`, 150, finalY + 30);\n\n      // Amount in words\n      doc.setFont(undefined, \"normal\");\n      doc.text(`Amount Chargeable (in words): ${invoice.amountInWords}`, 20, finalY + 50);\n\n      // Footer\n      doc.text(\"Subject to the Tirupati Jurisdiction\", 20, finalY + 70);\n      doc.text(\"This is a Computer Generated Invoice\", 150, finalY + 70);\n      doc.text(\"Authorised Signatory\", 20, finalY + 80);\n      return doc;\n    } catch (error) {\n      console.error(\"Error generating invoice PDF:\", error);\n      throw error;\n    }\n  };\n  const generateBatchSlipPDF = async batchSlip => {\n    try {\n      const {\n        jsPDF\n      } = await loadPDFLibraries();\n      const doc = new jsPDF();\n\n      // Header - Company Name (centered)\n      doc.setFontSize(14);\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"RR CONSTRUCTIONS\", 105, 20, {\n        align: \"center\"\n      });\n      doc.setFontSize(9);\n      doc.setFont(undefined, \"normal\");\n      doc.text(\"MCI 70 Control System Ver 3.1\", 105, 27, {\n        align: \"center\"\n      });\n      doc.text(\"SCHWING Stetter\", 105, 32, {\n        align: \"center\"\n      });\n\n      // Title Section with border\n      doc.setFontSize(10);\n      doc.setFont(undefined, \"bold\");\n\n      // Draw title box\n      doc.rect(20, 40, 120, 8);\n      doc.rect(140, 40, 50, 8);\n      doc.text(\"Docket / Batch Report / Autographic Record\", 25, 46);\n      doc.text(\"Plant Serial\", 145, 44);\n      doc.text(`Number: ${batchSlip.plantSerialNumber || \"3494\"}`, 145, 47);\n\n      // Details Section - Two columns with borders\n      let yPos = 55;\n\n      // Left column details\n      const leftDetails = [[\"Batch Date\", batchSlip.batchDate || \"2025-05-06\"], [\"Batch Start Time\", batchSlip.batchStartTime || \"08:00\"], [\"Batch End Time\", batchSlip.batchEndTime || \"08:30\"], [\"Batch Number / Docket Number\", batchSlip.batchNumber || \"1234\"], [\"Customer\", batchSlip.customer || \"Client A\"], [\"Site\", batchSlip.site || \"Client A\"], [\"Recipe Code\", batchSlip.recipeCode || \"M10\"], [\"Recipe Name\", batchSlip.recipeName || \"Default Recipe\"], [\"Truck Number\", batchSlip.truckNumber || \"tm123564\"], [\"Truck Driver\", batchSlip.truckDriver || \"murugesan\"], [\"Order Number\", batchSlip.orderNumber || \"1\"], [\"Batcher Name\", batchSlip.batcherName || \"ss\"]];\n\n      // Right column details\n      const rightDetails = [[\"Ordered Quantity\", `${batchSlip.orderedQuantity || \"10.00\"} M³`], [\"Production Quantity\", `${batchSlip.productionQuantity || \"10.00\"} M³`], [\"Adj/Manual Quantity\", `${batchSlip.adjManualQuantity || \"0.00\"} M³`], [\"With This Load\", `${batchSlip.withThisLoad || \"0.00\"} M³`], [\"Mixer Capacity\", `${batchSlip.mixerCapacity || \"0.50\"} M³`], [\"Batch Size\", `${batchSlip.batchSize || \"0.50\"} M³`]];\n      doc.setFontSize(8);\n      doc.setFont(undefined, \"normal\");\n\n      // Draw left column\n      for (let i = 0; i < leftDetails.length; i++) {\n        const detail = leftDetails[i];\n        const y = yPos + i * 6;\n        doc.rect(20, y, 60, 6);\n        doc.rect(80, y, 60, 6);\n        doc.text(detail[0] + \" :\", 22, y + 4);\n        doc.text(detail[1], 82, y + 4);\n      }\n\n      // Draw right column\n      for (let i = 0; i < rightDetails.length; i++) {\n        const detail = rightDetails[i];\n        const y = yPos + i * 6;\n        doc.rect(140, y, 35, 6);\n        doc.rect(175, y, 15, 6);\n        doc.text(detail[0] + \" :\", 142, y + 4);\n        doc.text(detail[1], 177, y + 4);\n      }\n\n      // Material Table\n      yPos = 130;\n\n      // Table headers\n      const headers = [\"Batch Size in M³\", \"SAND\", \"40 MM\", \"0\", \"CEM-1\", \"CEM-2\", \"CEM-3\", \"WATER\", \"0 ADMIX1\"];\n      const colWidths = [25, 18, 18, 12, 18, 18, 18, 18, 23];\n      doc.setFontSize(7);\n      doc.setFont(undefined, \"bold\");\n\n      // Draw header row\n      let currentX = 20;\n      for (let i = 0; i < headers.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(headers[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Data rows (20 rows as shown in image)\n      doc.setFont(undefined, \"normal\");\n      const rowData = [\"145.00\", \"75.00\", \"150.00\", \"0.00\", \"25.00\", \"25.00\", \"25.00\", \"45.00\", \"0.38\"];\n      for (let row = 0; row < 20; row++) {\n        yPos += 8;\n        currentX = 20;\n        for (let col = 0; col < rowData.length; col++) {\n          doc.rect(currentX, yPos, colWidths[col], 8);\n          doc.text(rowData[col], currentX + 2, yPos + 5);\n          currentX += colWidths[col];\n        }\n      }\n\n      // Total Set Weight row\n      yPos += 8;\n      currentX = 20;\n      doc.setFont(undefined, \"bold\");\n      const totalSetData = [\"Total Set Weight\", \"1500.00\", \"3000.00\", \"0.00\", \"500.00\", \"500.00\", \"500.00\", \"900.00\", \"7.50\"];\n      for (let i = 0; i < totalSetData.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(totalSetData[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Add some spacing\n      yPos += 15;\n\n      // Total Actual row\n      currentX = 20;\n      const totalActualData = [\"Total Actual\", \"1500.00\", \"3000.00\", \"0.00\", \"500.00\", \"500.00\", \"500.00\", \"900.00\", \"7.50\"];\n      for (let i = 0; i < totalActualData.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(totalActualData[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Footer - Batcher Name\n      doc.setFont(undefined, \"normal\");\n      doc.setFontSize(9);\n      doc.text(\"Batcher Name :\", 20, yPos + 20);\n      doc.text(batchSlip.batcherName || \"ss\", 20, yPos + 25);\n      return doc;\n    } catch (error) {\n      console.error(\"Error generating batch slip PDF:\", error);\n      throw error;\n    }\n  };\n\n  // Generate text fallback for when PDF fails\n  const generateInvoiceText = invoice => {\n    return `🧾 INVOICE DETAILS\n\nCompany: RR CONSTRUCTIONS\nGSTIN: 33AAGFT4474P1Z1\nAddress: Excel College Campus, NH 91, Mathura Road, Haryana - 121102\n\nInvoice No: ${invoice.invoiceNumber}\nDate: ${new Date(invoice.createdAt).toLocaleDateString()}\nBatch Number: ${invoice.batchNumber}\n\nBill To:\n${invoice.clientName}\n${invoice.clientAddress}\nGSTIN: ${invoice.clientGSTIN || \"N/A\"}\n\nItem Details:\nDescription: ${invoice.description}\nHSN: ${invoice.hsn}\nQuantity: ${invoice.quantity}\nRate: ₹${invoice.rate}\nUnit: ${invoice.unit}\nAmount: ₹${invoice.total}\n\nTax Calculation:\nSubtotal: ₹${invoice.total}\nCGST @ 9%: ₹${invoice.cgst}\nSGST @ 9%: ₹${invoice.sgst}\nGrand Total: ₹${invoice.grandTotal}\n\nAmount in Words: ${invoice.amountInWords}\n\nSubject to Tirupati Jurisdiction\nThis is a Computer Generated Invoice`;\n  };\n  const generateBatchSlipText = batchSlip => {\n    return `📋 BATCH SLIP DETAILS\n\nCompany: RR CONSTRUCTIONS\nMCI 70 Control System Ver 3.1\nSCHWING Stetter\n\nBatch Information:\nBatch Number: ${batchSlip.batchNumber}\nBatch Date: ${batchSlip.batchDate || \"2025-05-06\"}\nCustomer: ${batchSlip.customer}\nRecipe Code: ${batchSlip.recipeCode}\n\nProduction Details:\nOrdered Quantity: ${batchSlip.orderedQuantity || \"10.00\"} M³\nProduction Quantity: ${batchSlip.productionQuantity || \"10.00\"} M³\nBatch Size: ${batchSlip.batchSize || \"0.50\"} M³\n\nTruck Information:\nTruck Number: ${batchSlip.truckNumber}\nTruck Driver: ${batchSlip.truckDriver}\nBatcher Name: ${batchSlip.batcherName}\n\nPlant Serial Number: ${batchSlip.plantSerialNumber || \"3494\"}\nOrder Number: ${batchSlip.orderNumber || \"1\"}`;\n  };\n\n  // WhatsApp sending function using Twilio\n  const sendToWhatsApp = async (type, data) => {\n    setIsLoading(true);\n    try {\n      console.log(\"Starting WhatsApp send process...\");\n      if (!formData.clientPhone || formData.clientPhone.length < 10) {\n        throw new Error(\"Please enter a valid phone number with country code (e.g., +919876543210)\");\n      }\n      let pdfBase64 = null;\n      let messageContent = null;\n\n      // Try to generate PDF first\n      try {\n        console.log(\"Attempting to generate PDF...\");\n        const doc = type === \"invoice\" ? await generateInvoicePDF(data) : await generateBatchSlipPDF(data);\n        const pdfBlob = doc.output(\"blob\");\n        console.log(\"PDF generated successfully, size:\", pdfBlob.size);\n\n        // Convert to base64\n        const reader = new FileReader();\n        const base64Promise = new Promise((resolve, reject) => {\n          reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\n          reader.onerror = reject;\n        });\n        reader.readAsDataURL(pdfBlob);\n        pdfBase64 = await base64Promise;\n        console.log(\"PDF converted to base64, length:\", pdfBase64.length);\n      } catch (pdfError) {\n        console.warn(\"PDF generation failed, falling back to text:\", pdfError.message);\n        // Generate text fallback\n        messageContent = type === \"invoice\" ? generateInvoiceText(data) : generateBatchSlipText(data);\n      }\n\n      // Send to backend API\n      console.log(\"Sending request to API...\");\n      const response = await fetch(\"http://localhost:8000/api/send-whatsapp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: type,\n          data: data,\n          pdfBase64: pdfBase64,\n          messageContent: messageContent,\n          phoneNumber: formData.clientPhone\n        })\n      });\n      console.log(\"API response status:\", response.status);\n\n      // Check if response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        const textResponse = await response.text();\n        console.error(\"Non-JSON response:\", textResponse.substring(0, 500));\n        throw new Error(\"Server returned HTML instead of JSON. Check your API route.\");\n      }\n      const result = await response.json();\n      console.log(\"API response:\", result);\n      if (response.ok && result.success) {\n        alert(`${type === \"invoice\" ? \"Invoice\" : \"Batch slip\"} sent to WhatsApp successfully!\\nMessage ID: ${result.messageSid}`);\n      } else {\n        throw new Error(result.error || \"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error sending to WhatsApp:\", error);\n      alert(`Failed to send to WhatsApp: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: \"\"\n      }));\n    }\n  };\n  const handleMaterialChange = (index, field, value) => {\n    const updatedMaterialData = [...formData.materialData];\n    updatedMaterialData[index] = {\n      ...updatedMaterialData[index],\n      [field]: value\n    };\n    setFormData(prev => ({\n      ...prev,\n      materialData: updatedMaterialData\n    }));\n\n    // Recalculate totals\n    calculateTotals(updatedMaterialData);\n  };\n  const calculateTotals = materialData => {\n    const totals = {\n      totalSand: 0,\n      totalMm40: 0,\n      totalMm20: 0,\n      totalCem1: 0,\n      totalCem2: 0,\n      totalCem3: 0,\n      totalWater: 0,\n      totalAdmix1: 0\n    };\n    materialData.forEach(row => {\n      totals.totalSand += Number.parseFloat(row.sand) || 0;\n      totals.totalMm40 += Number.parseFloat(row.mm40) || 0;\n      totals.totalMm20 += Number.parseFloat(row.mm20) || 0;\n      totals.totalCem1 += Number.parseFloat(row.cem1) || 0;\n      totals.totalCem2 += Number.parseFloat(row.cem2) || 0;\n      totals.totalCem3 += Number.parseFloat(row.cem3) || 0;\n      totals.totalWater += Number.parseFloat(row.water) || 0;\n      totals.totalAdmix1 += Number.parseFloat(row.admix1) || 0;\n    });\n    setFormData(prev => ({\n      ...prev,\n      ...Object.fromEntries(Object.entries(totals).map(([key, value]) => [key, value.toFixed(2)]))\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    const requiredFields = [\"batchDate\", \"customer\", \"recipeCode\", \"recipeName\", \"truckNumber\", \"truckDriver\", \"batcherName\", \"clientName\", \"clientAddress\", \"clientEmail\"];\n    requiredFields.forEach(field => {\n      if (!formData[field] || formData[field].trim() === \"\") {\n        newErrors[field] = \"This field is required\";\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSave = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const batchSlipData = {\n        plantSerialNumber: formData.plantSerialNumber,\n        batchDate: formData.batchDate,\n        batchStartTime: formData.batchStartTime,\n        batchEndTime: formData.batchEndTime,\n        batchNumber: formData.batchNumber,\n        customer: formData.customer,\n        site: formData.site,\n        recipeCode: formData.recipeCode,\n        recipeName: formData.recipeName,\n        truckNumber: formData.truckNumber,\n        truckDriver: formData.truckDriver,\n        orderNumber: formData.orderNumber,\n        batcherName: formData.batcherName,\n        orderedQuantity: formData.orderedQuantity,\n        productionQuantity: formData.productionQuantity,\n        adjManualQuantity: formData.adjManualQuantity,\n        withThisLoad: formData.withThisLoad,\n        mixerCapacity: formData.mixerCapacity,\n        batchSize: formData.batchSize,\n        clientName: formData.clientName,\n        clientAddress: formData.clientAddress,\n        clientEmail: formData.clientEmail,\n        clientPhone: formData.clientPhone,\n        clientGSTIN: formData.clientGSTIN,\n        description: formData.description,\n        hsn: formData.hsn,\n        quantity: formData.quantity,\n        rate: formData.rate,\n        unit: formData.unit\n      };\n      try {\n        const response = await fetch(\"http://localhost:5000/batch-slips\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(batchSlipData)\n        });\n        if (response.ok) {\n          await sendToWhatsApp(\"batchslip\", batchSlipData);\n          // Navigate to invoices\n          if (onNavigate) {\n            onNavigate(\"invoices\");\n          }\n        } else {\n          throw new Error(\"Failed to create batch slip\");\n        }\n      } catch (error) {\n        console.error(\"Error creating batch slip:\", error);\n        alert(\"Error creating batch slip. Please try again.\");\n      }\n    }\n  };\n  const numberToWords = num => {\n    // Simple implementation - you can enhance this\n    const ones = [\"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    const tens = [\"\", \"\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"];\n    const thousands = [\"\", \"thousand\", \"lakh\", \"crore\"];\n    if (num === 0) return \"zero\";\n\n    // Simplified conversion - you can implement full conversion\n    return `${Math.floor(num / 1000)} thousand ${Math.floor(num % 1000)} Rupees Only`;\n  };\n  const resetForm = () => {\n    setFormData({\n      ...formData,\n      batchNumber: generateBatchNumber(),\n      batchDate: new Date().toISOString().split(\"T\")[0],\n      customer: \"\",\n      site: \"\",\n      recipeCode: \"\",\n      recipeName: \"\",\n      truckNumber: \"\",\n      truckDriver: \"\",\n      orderNumber: \"\",\n      batcherName: \"\",\n      clientName: \"\",\n      clientAddress: \"\",\n      clientEmail: \"\",\n      clientGSTIN: \"\"\n    });\n    setErrors({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-batch-slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-icon\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Batch Slip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-generate\",\n          onClick: () => setFormData(prev => ({\n            ...prev,\n            batchNumber: generateBatchNumber()\n          })),\n          children: \"\\uD83D\\uDD04 Generate New Batch No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-slip-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSave,\n        className: \"batch-slip-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"RR CONSTRUCTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Docket / Batch Report / Autographic Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid-batch\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Plant Serial Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"plantSerialNumber\",\n                value: formData.plantSerialNumber,\n                onChange: handleInputChange,\n                readOnly: true,\n                className: \"readonly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batch Date *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"batchDate\",\n                value: formData.batchDate,\n                onChange: handleInputChange,\n                className: errors.batchDate ? \"error\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this), errors.batchDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.batchDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batch Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"batchStartTime\",\n                value: formData.batchStartTime,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batch End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"batchEndTime\",\n                value: formData.batchEndTime,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batch Number *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"batchNumber\",\n                value: formData.batchNumber,\n                onChange: handleInputChange,\n                className: errors.batchNumber ? \"error\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Customer *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"customer\",\n                value: formData.customer,\n                onChange: handleInputChange,\n                className: errors.customer ? \"error\" : \"\",\n                placeholder: \"Client A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 17\n              }, this), errors.customer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.customer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Site\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"site\",\n                value: formData.site,\n                onChange: handleInputChange,\n                placeholder: \"Client A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recipe Code *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"recipeCode\",\n                value: formData.recipeCode,\n                onChange: handleInputChange,\n                className: errors.recipeCode ? \"error\" : \"\",\n                placeholder: \"M10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 17\n              }, this), errors.recipeCode && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.recipeCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recipe Name *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"recipeName\",\n                value: formData.recipeName,\n                onChange: handleInputChange,\n                className: errors.recipeName ? \"error\" : \"\",\n                placeholder: \"Default Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 17\n              }, this), errors.recipeName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.recipeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Truck Number *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"truckNumber\",\n                value: formData.truckNumber,\n                onChange: handleInputChange,\n                className: errors.truckNumber ? \"error\" : \"\",\n                placeholder: \"tm123564\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 17\n              }, this), errors.truckNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.truckNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Truck Driver *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"truckDriver\",\n                value: formData.truckDriver,\n                onChange: handleInputChange,\n                className: errors.truckDriver ? \"error\" : \"\",\n                placeholder: \"murugesan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 17\n              }, this), errors.truckDriver && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.truckDriver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Order Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"orderNumber\",\n                value: formData.orderNumber,\n                onChange: handleInputChange,\n                placeholder: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batcher Name *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"batcherName\",\n                value: formData.batcherName,\n                onChange: handleInputChange,\n                className: errors.batcherName ? \"error\" : \"\",\n                placeholder: \"ss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 17\n              }, this), errors.batcherName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.batcherName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Quantities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid-quantities\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ordered Quantity (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"orderedQuantity\",\n                value: formData.orderedQuantity,\n                onChange: handleInputChange,\n                placeholder: \"10.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Production Quantity (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"productionQuantity\",\n                value: formData.productionQuantity,\n                onChange: handleInputChange,\n                placeholder: \"10.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Adj/Manual Quantity (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"adjManualQuantity\",\n                value: formData.adjManualQuantity,\n                onChange: handleInputChange,\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"With This Load (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"withThisLoad\",\n                value: formData.withThisLoad,\n                onChange: handleInputChange,\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Mixer Capacity (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"mixerCapacity\",\n                value: formData.mixerCapacity,\n                onChange: handleInputChange,\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Batch Size (M\\xB3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"batchSize\",\n                value: formData.batchSize,\n                onChange: handleInputChange,\n                placeholder: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Client Information (For Invoice)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid-client\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client Name *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clientName\",\n                value: formData.clientName,\n                onChange: handleInputChange,\n                className: errors.clientName ? \"error\" : \"\",\n                placeholder: \"Client B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 17\n              }, this), errors.clientName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.clientName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client Address *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"clientAddress\",\n                value: formData.clientAddress,\n                onChange: handleInputChange,\n                className: errors.clientAddress ? \"error\" : \"\",\n                placeholder: \"No. 123, Salem Main Road, Salem\",\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 17\n              }, this), errors.clientAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.clientAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client Email *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"clientEmail\",\n                value: formData.clientEmail,\n                onChange: handleInputChange,\n                className: errors.clientEmail ? \"error\" : \"\",\n                placeholder: \"client@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 17\n              }, this), errors.clientEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.clientEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"clientPhone\",\n                value: formData.clientPhone,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client GSTIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clientGSTIN\",\n                value: formData.clientGSTIN,\n                onChange: handleInputChange,\n                placeholder: \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1110,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Invoice Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid-invoice\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleInputChange,\n                placeholder: \"Concrete M30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"HSN Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"hsn\",\n                value: formData.hsn,\n                onChange: handleInputChange,\n                placeholder: \"6810\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"quantity\",\n                value: formData.quantity,\n                onChange: handleInputChange,\n                placeholder: \"15.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Rate (\\u20B9)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                name: \"rate\",\n                value: formData.rate,\n                onChange: handleInputChange,\n                placeholder: \"4000.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"unit\",\n                value: formData.unit,\n                onChange: handleInputChange,\n                placeholder: \"M\\xB3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-cancel\",\n            onClick: resetForm,\n            children: \"Reset Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-save\",\n            children: \"Save & Generate Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 771,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBatchSlip, \"LbEnhcb2q0n1lrL7NfYFEgmdUMc=\");\n_c = CreateBatchSlip;\nexport default CreateBatchSlip;\nvar _c;\n$RefreshReg$(_c, \"CreateBatchSlip\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","CreateBatchSlip","onNavigate","batchSlips","setBatchSlips","isLoading","setIsLoading","formData","setFormData","plantSerialNumber","batchDate","Date","toISOString","split","batchStartTime","batchEndTime","batchNumber","customer","site","recipeCode","recipeName","truckNumber","truckDriver","orderNumber","batcherName","orderedQuantity","productionQuantity","adjManualQuantity","withThisLoad","mixerCapacity","batchSize","materialData","Array","fill","map","sand","mm40","mm20","mm0","cem1","cem2","cem3","water","admix1","totalSand","totalMm40","totalMm20","totalCem1","totalCem2","totalCem3","totalWater","totalAdmix1","clientName","clientAddress","clientEmail","clientPhone","clientGSTIN","description","hsn","rate","quantity","unit","errors","setErrors","prev","generateBatchNumber","fetchInvoices","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","sequence","Math","floor","random","response","fetch","data","json","error","console","sendBatchSlip","batchSlip","sendToWhatsApp","loadPDFLibraries","jsPDF","default","autoTable","Error","generateInvoicePDF","invoice","doc","setFontSize","setFont","undefined","text","invoiceNumber","createdAt","toLocaleDateString","tableData","total","startY","head","body","theme","finalY","lastAutoTable","cgst","sgst","grandTotal","amountInWords","generateBatchSlipPDF","align","rect","yPos","leftDetails","rightDetails","i","length","detail","y","headers","colWidths","currentX","rowData","row","col","totalSetData","totalActualData","generateInvoiceText","generateBatchSlipText","type","log","pdfBase64","messageContent","pdfBlob","output","size","reader","FileReader","base64Promise","Promise","resolve","reject","onloadend","result","onerror","readAsDataURL","pdfError","warn","message","method","JSON","stringify","phoneNumber","status","contentType","get","includes","textResponse","substring","ok","success","alert","messageSid","handleInputChange","e","name","value","target","handleMaterialChange","index","field","updatedMaterialData","calculateTotals","totals","forEach","Number","parseFloat","Object","fromEntries","entries","key","toFixed","validateForm","newErrors","requiredFields","trim","keys","handleSave","preventDefault","batchSlipData","numberToWords","num","ones","tens","thousands","resetForm","className","children","fileName","lineNumber","columnNumber","onClick","onSubmit","onChange","readOnly","placeholder","step","rows","_c","$RefreshReg$"],"sources":["E:/construction-app/src/components/inward/CreateBatchSlip.js"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nconst CreateBatchSlip = ({ onNavigate }) => {\n  const [batchSlips, setBatchSlips] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [formData, setFormData] = useState({\n    // Header Information\n    plantSerialNumber: \"3494\",\n    batchDate: new Date().toISOString().split(\"T\")[0],\n    batchStartTime: \"\",\n    batchEndTime: \"\",\n    batchNumber: \"\",\n    customer: \"\",\n    site: \"\",\n    recipeCode: \"\",\n    recipeName: \"\",\n    truckNumber: \"\",\n    truckDriver: \"\",\n    orderNumber: \"\",\n    batcherName: \"\",\n\n    // Quantities\n    orderedQuantity: \"\",\n    productionQuantity: \"\",\n    adjManualQuantity: \"\",\n    withThisLoad: 0,\n    mixerCapacity: \"\",\n    batchSize: \"\",\n\n    // Material Data - 20 rows as shown in image\n    materialData: Array(20)\n      .fill()\n      .map(() => ({\n        sand: \"145.00\",\n        mm40: \"75.00\",\n        mm20: \"150.00\",\n        mm0: \"0.00\",\n        cem1: \"25.00\",\n        cem2: \"25.00\",\n        cem3: \"25.00\",\n        water: \"45.00\",\n        admix1: \"0.38\",\n      })),\n\n    // Totals\n    totalSand: \"1500.00\",\n    totalMm40: \"3000.00\",\n    totalMm20: \"0.00\",\n    totalCem1: \"500.00\",\n    totalCem2: \"500.00\",\n    totalCem3: \"500.00\",\n    totalWater: \"900.00\",\n    totalAdmix1: \"7.50\",\n\n    // Client Information for Invoice\n    clientName: \"\",\n    clientAddress: \"\",\n    clientEmail: \"\",\n  clientPhone: \"+91\",\n    clientGSTIN: \"\",\n\n    // Invoice Details\n    description: \"Concrete M30\",\n    hsn: \"6810\",\n    rate: \"4000.00\",\n    quantity: \"15.00\",\n    unit: \"M³\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  // Generate batch number automatically\n  useEffect(() => {\n    if (!formData.batchNumber) {\n      setFormData((prev) => ({\n        ...prev,\n        batchNumber: generateBatchNumber(),\n      }));\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchInvoices();\n  }, []);\n\n  const generateBatchNumber = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const sequence = String(Math.floor(Math.random() * 1000) + 1).padStart(\n      3,\n      \"0\"\n    );\n    return `${year}${month}${day}${sequence}`;\n\n  };\n\n  const fetchInvoices = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/invoices\");\n      const data = await response.json();\n      setBatchSlips(data); // Using same state for invoices\n    } catch (error) {\n      console.error(\"Error fetching invoices:\", error);\n    }\n  };\n\n  const sendBatchSlip = (batchSlip) => {\n    if (isLoading) return;\n    sendToWhatsApp(\"batchslip\", batchSlip);\n  };\n\n  // Dynamic import for PDF libraries to avoid SSR issues\n  const loadPDFLibraries = async () => {\n    try {\n      const jsPDF = (await import(\"jspdf\")).default;\n      const autoTable = (await import(\"jspdf-autotable\")).default;\n      return { jsPDF, autoTable };\n    } catch (error) {\n      console.error(\"Failed to load PDF libraries:\", error);\n      throw new Error(\"PDF libraries not available\");\n    }\n  };\n\n  const generateInvoicePDF = async (invoice) => {\n    try {\n      const { jsPDF, autoTable } = await loadPDFLibraries();\n      const doc = new jsPDF();\n\n      // Header\n      doc.setFontSize(16);\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"RR CONSTRUCTIONS\", 20, 20);\n      doc.text(\"Tax Invoice\", 150, 20);\n\n      doc.setFontSize(10);\n      doc.setFont(undefined, \"normal\");\n      doc.text(\"GSTIN: 33AAGFT4474P1Z1\", 20, 30);\n      doc.text(`Invoice No: ${invoice.invoiceNumber}`, 150, 30);\n      doc.text(\"Excel College Campus, NH 91, Mathura\", 20, 35);\n      doc.text(\n        `Date: ${new Date(invoice.createdAt).toLocaleDateString()}`,\n        150,\n        35\n      );\n      doc.text(\"Road, Haryana - 121102\", 20, 40);\n      doc.text(`Batch Number: ${invoice.batchNumber}`, 150, 40);\n      doc.text(\"GST/NSN: 33AAGFT4474P1Z1\", 20, 45);\n      doc.text(\"Terms of Delivery: As per Order &\", 150, 45);\n      doc.text(\"Biller: INFRA LP\", 20, 50);\n      doc.text(\"Cheque\", 150, 50);\n      doc.text(\"State Name: Tamil Nadu, India\", 20, 55);\n\n      // Bill To section\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"Bill To:\", 20, 70);\n      doc.text(\"Dispatch Site:\", 150, 70);\n      doc.setFont(undefined, \"normal\");\n      doc.text(invoice.clientName, 20, 80);\n      doc.text(\"N/A\", 150, 80);\n      doc.text(invoice.clientAddress, 20, 85);\n      doc.text(\"Bill of Lading/Ref No: N/A\", 150, 85);\n      doc.text(`GSTIN: ${invoice.clientGSTIN || \"N/A\"}`, 20, 90);\n\n      // Table using autoTable\n      const tableData = [\n  [\n    invoice.description,\n    invoice.hsn,\n    invoice.quantity,\n    `₹${invoice.rate}`,    // ✅ Fixed\n    invoice.unit,\n    `₹${invoice.total}`,   // ✅ Fixed\n  ],\n];\n\n\n      autoTable(doc, {\n        startY: 100,\n        head: [[\"Description\", \"HSN\", \"Quantity\", \"Rate\", \"Per\", \"Amount\"]],\n        body: tableData,\n        theme: \"grid\",\n      });\n\n      // Totals\n      const finalY = doc.lastAutoTable.finalY + 10;\n      doc.text(`Total: ₹${invoice.total}`, 150, finalY);\n      doc.text(`Output-CGST @ 9%: ₹${invoice.cgst}`, 150, finalY + 10);\n      doc.text(`Output-SGST @ 9%: ₹${invoice.sgst}`, 150, finalY + 20);\n      doc.setFont(undefined, \"bold\");\n      doc.text(`Grand Total: ₹${invoice.grandTotal}`, 150, finalY + 30);\n\n      // Amount in words\n      doc.setFont(undefined, \"normal\");\n      doc.text(\n        `Amount Chargeable (in words): ${invoice.amountInWords}`,\n        20,\n        finalY + 50\n      );\n\n      // Footer\n      doc.text(\"Subject to the Tirupati Jurisdiction\", 20, finalY + 70);\n      doc.text(\"This is a Computer Generated Invoice\", 150, finalY + 70);\n      doc.text(\"Authorised Signatory\", 20, finalY + 80);\n\n      return doc;\n    } catch (error) {\n      console.error(\"Error generating invoice PDF:\", error);\n      throw error;\n    }\n  };\n\n  const generateBatchSlipPDF = async (batchSlip) => {\n    try {\n      const { jsPDF } = await loadPDFLibraries();\n      const doc = new jsPDF();\n\n      // Header - Company Name (centered)\n      doc.setFontSize(14);\n      doc.setFont(undefined, \"bold\");\n      doc.text(\"RR CONSTRUCTIONS\", 105, 20, { align: \"center\" });\n\n      doc.setFontSize(9);\n      doc.setFont(undefined, \"normal\");\n      doc.text(\"MCI 70 Control System Ver 3.1\", 105, 27, { align: \"center\" });\n      doc.text(\"SCHWING Stetter\", 105, 32, { align: \"center\" });\n\n      // Title Section with border\n      doc.setFontSize(10);\n      doc.setFont(undefined, \"bold\");\n\n      // Draw title box\n      doc.rect(20, 40, 120, 8);\n      doc.rect(140, 40, 50, 8);\n      doc.text(\"Docket / Batch Report / Autographic Record\", 25, 46);\n      doc.text(\"Plant Serial\", 145, 44);\n      doc.text(`Number: ${batchSlip.plantSerialNumber || \"3494\"}`, 145, 47);\n\n      // Details Section - Two columns with borders\n      let yPos = 55;\n\n      // Left column details\n      const leftDetails = [\n        [\"Batch Date\", batchSlip.batchDate || \"2025-05-06\"],\n        [\"Batch Start Time\", batchSlip.batchStartTime || \"08:00\"],\n        [\"Batch End Time\", batchSlip.batchEndTime || \"08:30\"],\n        [\"Batch Number / Docket Number\", batchSlip.batchNumber || \"1234\"],\n        [\"Customer\", batchSlip.customer || \"Client A\"],\n        [\"Site\", batchSlip.site || \"Client A\"],\n        [\"Recipe Code\", batchSlip.recipeCode || \"M10\"],\n        [\"Recipe Name\", batchSlip.recipeName || \"Default Recipe\"],\n        [\"Truck Number\", batchSlip.truckNumber || \"tm123564\"],\n        [\"Truck Driver\", batchSlip.truckDriver || \"murugesan\"],\n        [\"Order Number\", batchSlip.orderNumber || \"1\"],\n        [\"Batcher Name\", batchSlip.batcherName || \"ss\"],\n      ];\n\n      // Right column details\n      const rightDetails = [\n  [\"Ordered Quantity\", `${batchSlip.orderedQuantity || \"10.00\"} M³`],\n  [\"Production Quantity\", `${batchSlip.productionQuantity || \"10.00\"} M³`],\n  [\"Adj/Manual Quantity\", `${batchSlip.adjManualQuantity || \"0.00\"} M³`],\n  [\"With This Load\", `${batchSlip.withThisLoad || \"0.00\"} M³`],\n  [\"Mixer Capacity\", `${batchSlip.mixerCapacity || \"0.50\"} M³`],\n  [\"Batch Size\", `${batchSlip.batchSize || \"0.50\"} M³`],\n];\n\n\n      doc.setFontSize(8);\n      doc.setFont(undefined, \"normal\");\n\n      // Draw left column\n      for (let i = 0; i < leftDetails.length; i++) {\n        const detail = leftDetails[i];\n        const y = yPos + i * 6;\n        doc.rect(20, y, 60, 6);\n        doc.rect(80, y, 60, 6);\n        doc.text(detail[0] + \" :\", 22, y + 4);\n        doc.text(detail[1], 82, y + 4);\n      }\n\n      // Draw right column\n      for (let i = 0; i < rightDetails.length; i++) {\n        const detail = rightDetails[i];\n        const y = yPos + i * 6;\n        doc.rect(140, y, 35, 6);\n        doc.rect(175, y, 15, 6);\n        doc.text(detail[0] + \" :\", 142, y + 4);\n        doc.text(detail[1], 177, y + 4);\n      }\n\n      // Material Table\n      yPos = 130;\n\n      // Table headers\n      const headers = [\n        \"Batch Size in M³\",\n        \"SAND\",\n        \"40 MM\",\n        \"0\",\n        \"CEM-1\",\n        \"CEM-2\",\n        \"CEM-3\",\n        \"WATER\",\n        \"0 ADMIX1\",\n      ];\n      const colWidths = [25, 18, 18, 12, 18, 18, 18, 18, 23];\n\n      doc.setFontSize(7);\n      doc.setFont(undefined, \"bold\");\n\n      // Draw header row\n      let currentX = 20;\n      for (let i = 0; i < headers.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(headers[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Data rows (20 rows as shown in image)\n      doc.setFont(undefined, \"normal\");\n      const rowData = [\n        \"145.00\",\n        \"75.00\",\n        \"150.00\",\n        \"0.00\",\n        \"25.00\",\n        \"25.00\",\n        \"25.00\",\n        \"45.00\",\n        \"0.38\",\n      ];\n\n      for (let row = 0; row < 20; row++) {\n        yPos += 8;\n        currentX = 20;\n\n        for (let col = 0; col < rowData.length; col++) {\n          doc.rect(currentX, yPos, colWidths[col], 8);\n          doc.text(rowData[col], currentX + 2, yPos + 5);\n          currentX += colWidths[col];\n        }\n      }\n\n      // Total Set Weight row\n      yPos += 8;\n      currentX = 20;\n      doc.setFont(undefined, \"bold\");\n\n      const totalSetData = [\n        \"Total Set Weight\",\n        \"1500.00\",\n        \"3000.00\",\n        \"0.00\",\n        \"500.00\",\n        \"500.00\",\n        \"500.00\",\n        \"900.00\",\n        \"7.50\",\n      ];\n\n      for (let i = 0; i < totalSetData.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(totalSetData[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Add some spacing\n      yPos += 15;\n\n      // Total Actual row\n      currentX = 20;\n      const totalActualData = [\n        \"Total Actual\",\n        \"1500.00\",\n        \"3000.00\",\n        \"0.00\",\n        \"500.00\",\n        \"500.00\",\n        \"500.00\",\n        \"900.00\",\n        \"7.50\",\n      ];\n\n      for (let i = 0; i < totalActualData.length; i++) {\n        doc.rect(currentX, yPos, colWidths[i], 8);\n        doc.text(totalActualData[i], currentX + 1, yPos + 5);\n        currentX += colWidths[i];\n      }\n\n      // Footer - Batcher Name\n      doc.setFont(undefined, \"normal\");\n      doc.setFontSize(9);\n    doc.text(\"Batcher Name :\", 20, yPos + 20);\n\n      doc.text(batchSlip.batcherName || \"ss\", 20, yPos + 25);\n\n      return doc;\n    } catch (error) {\n      console.error(\"Error generating batch slip PDF:\", error);\n      throw error;\n    }\n  };\n\n  // Generate text fallback for when PDF fails\n  const generateInvoiceText = (invoice) => {\n    return `🧾 INVOICE DETAILS\n\nCompany: RR CONSTRUCTIONS\nGSTIN: 33AAGFT4474P1Z1\nAddress: Excel College Campus, NH 91, Mathura Road, Haryana - 121102\n\nInvoice No: ${invoice.invoiceNumber}\nDate: ${new Date(invoice.createdAt).toLocaleDateString()}\nBatch Number: ${invoice.batchNumber}\n\nBill To:\n${invoice.clientName}\n${invoice.clientAddress}\nGSTIN: ${invoice.clientGSTIN || \"N/A\"}\n\nItem Details:\nDescription: ${invoice.description}\nHSN: ${invoice.hsn}\nQuantity: ${invoice.quantity}\nRate: ₹${invoice.rate}\nUnit: ${invoice.unit}\nAmount: ₹${invoice.total}\n\nTax Calculation:\nSubtotal: ₹${invoice.total}\nCGST @ 9%: ₹${invoice.cgst}\nSGST @ 9%: ₹${invoice.sgst}\nGrand Total: ₹${invoice.grandTotal}\n\nAmount in Words: ${invoice.amountInWords}\n\nSubject to Tirupati Jurisdiction\nThis is a Computer Generated Invoice`;\n  };\n\n  const generateBatchSlipText = (batchSlip) => {\n    return `📋 BATCH SLIP DETAILS\n\nCompany: RR CONSTRUCTIONS\nMCI 70 Control System Ver 3.1\nSCHWING Stetter\n\nBatch Information:\nBatch Number: ${batchSlip.batchNumber}\nBatch Date: ${batchSlip.batchDate || \"2025-05-06\"}\nCustomer: ${batchSlip.customer}\nRecipe Code: ${batchSlip.recipeCode}\n\nProduction Details:\nOrdered Quantity: ${batchSlip.orderedQuantity || \"10.00\"} M³\nProduction Quantity: ${batchSlip.productionQuantity || \"10.00\"} M³\nBatch Size: ${batchSlip.batchSize || \"0.50\"} M³\n\nTruck Information:\nTruck Number: ${batchSlip.truckNumber}\nTruck Driver: ${batchSlip.truckDriver}\nBatcher Name: ${batchSlip.batcherName}\n\nPlant Serial Number: ${batchSlip.plantSerialNumber || \"3494\"}\nOrder Number: ${batchSlip.orderNumber || \"1\"}`;\n  };\n\n  // WhatsApp sending function using Twilio\n  const sendToWhatsApp = async (type, data) => {\n    setIsLoading(true);\n    try {\n      console.log(\"Starting WhatsApp send process...\");\n\n      if (!formData.clientPhone || formData.clientPhone.length < 10) {\n        throw new Error(\n          \"Please enter a valid phone number with country code (e.g., +919876543210)\"\n        );\n      }\n\n      let pdfBase64 = null;\n      let messageContent = null;\n\n      // Try to generate PDF first\n      try {\n        console.log(\"Attempting to generate PDF...\");\n        const doc =\n          type === \"invoice\"\n            ? await generateInvoicePDF(data)\n            : await generateBatchSlipPDF(data);\n        const pdfBlob = doc.output(\"blob\");\n        console.log(\"PDF generated successfully, size:\", pdfBlob.size);\n\n        // Convert to base64\n        const reader = new FileReader();\n        const base64Promise = new Promise((resolve, reject) => {\n          reader.onloadend = () => resolve(reader.result.split(\",\")[1]);\n          reader.onerror = reject;\n        });\n        reader.readAsDataURL(pdfBlob);\n        pdfBase64 = await base64Promise;\n        console.log(\"PDF converted to base64, length:\", pdfBase64.length);\n      } catch (pdfError) {\n        console.warn(\n          \"PDF generation failed, falling back to text:\",\n          pdfError.message\n        );\n        // Generate text fallback\n        messageContent =\n          type === \"invoice\"\n            ? generateInvoiceText(data)\n            : generateBatchSlipText(data);\n      }\n\n      // Send to backend API\n      console.log(\"Sending request to API...\");\n      const response = await fetch(\"http://localhost:8000/api/send-whatsapp\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          type: type,\n          data: data,\n          pdfBase64: pdfBase64,\n          messageContent: messageContent,\n          phoneNumber: formData.clientPhone,\n        }),\n      });\n\n      console.log(\"API response status:\", response.status);\n\n      // Check if response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        const textResponse = await response.text();\n        console.error(\"Non-JSON response:\", textResponse.substring(0, 500));\n        throw new Error(\n          \"Server returned HTML instead of JSON. Check your API route.\"\n        );\n      }\n\n      const result = await response.json();\n      console.log(\"API response:\", result);\n\n      if (response.ok && result.success) {\n        alert(\n          `${\n            type === \"invoice\" ? \"Invoice\" : \"Batch slip\"\n          } sent to WhatsApp successfully!\\nMessage ID: ${result.messageSid}`\n        );\n      } else {\n        throw new Error(result.error || \"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error sending to WhatsApp:\", error);\n      alert(`Failed to send to WhatsApp: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: \"\",\n      }));\n    }\n  };\n\n  const handleMaterialChange = (index, field, value) => {\n    const updatedMaterialData = [...formData.materialData];\n    updatedMaterialData[index] = {\n      ...updatedMaterialData[index],\n      [field]: value,\n    };\n\n    setFormData((prev) => ({\n      ...prev,\n      materialData: updatedMaterialData,\n    }));\n\n    // Recalculate totals\n    calculateTotals(updatedMaterialData);\n  };\n\n  const calculateTotals = (materialData) => {\n    const totals = {\n      totalSand: 0,\n      totalMm40: 0,\n      totalMm20: 0,\n      totalCem1: 0,\n      totalCem2: 0,\n      totalCem3: 0,\n      totalWater: 0,\n      totalAdmix1: 0,\n    };\n\n    materialData.forEach((row) => {\n      totals.totalSand += Number.parseFloat(row.sand) || 0;\n      totals.totalMm40 += Number.parseFloat(row.mm40) || 0;\n      totals.totalMm20 += Number.parseFloat(row.mm20) || 0;\n      totals.totalCem1 += Number.parseFloat(row.cem1) || 0;\n      totals.totalCem2 += Number.parseFloat(row.cem2) || 0;\n      totals.totalCem3 += Number.parseFloat(row.cem3) || 0;\n      totals.totalWater += Number.parseFloat(row.water) || 0;\n      totals.totalAdmix1 += Number.parseFloat(row.admix1) || 0;\n    });\n\n    setFormData((prev) => ({\n      ...prev,\n      ...Object.fromEntries(\n        Object.entries(totals).map(([key, value]) => [key, value.toFixed(2)])\n      ),\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    const requiredFields = [\n      \"batchDate\",\n      \"customer\",\n      \"recipeCode\",\n      \"recipeName\",\n      \"truckNumber\",\n      \"truckDriver\",\n      \"batcherName\",\n      \"clientName\",\n      \"clientAddress\",\n      \"clientEmail\",\n    ];\n\n    requiredFields.forEach((field) => {\n      if (!formData[field] || formData[field].trim() === \"\") {\n        newErrors[field] = \"This field is required\";\n      }\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      const batchSlipData = {\n        plantSerialNumber: formData.plantSerialNumber,\n        batchDate: formData.batchDate,\n        batchStartTime: formData.batchStartTime,\n        batchEndTime: formData.batchEndTime,\n        batchNumber: formData.batchNumber,\n        customer: formData.customer,\n        site: formData.site,\n        recipeCode: formData.recipeCode,\n        recipeName: formData.recipeName,\n        truckNumber: formData.truckNumber,\n        truckDriver: formData.truckDriver,\n        orderNumber: formData.orderNumber,\n        batcherName: formData.batcherName,\n        orderedQuantity: formData.orderedQuantity,\n        productionQuantity: formData.productionQuantity,\n        adjManualQuantity: formData.adjManualQuantity,\n        withThisLoad: formData.withThisLoad,\n        mixerCapacity: formData.mixerCapacity,\n        batchSize: formData.batchSize,\n        clientName: formData.clientName,\n        clientAddress: formData.clientAddress,\n        clientEmail: formData.clientEmail,\n        clientPhone: formData.clientPhone,\n        clientGSTIN: formData.clientGSTIN,\n        description: formData.description,\n        hsn: formData.hsn,\n        quantity: formData.quantity,\n        rate: formData.rate,\n        unit: formData.unit,\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:5000/batch-slips\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(batchSlipData),\n        });\n\n        if (response.ok) {\n          await sendToWhatsApp(\"batchslip\", batchSlipData);\n          // Navigate to invoices\n          if (onNavigate) {\n            onNavigate(\"invoices\");\n          }\n        } else {\n          throw new Error(\"Failed to create batch slip\");\n        }\n      } catch (error) {\n        console.error(\"Error creating batch slip:\", error);\n        alert(\"Error creating batch slip. Please try again.\");\n      }\n    }\n  };\n\n  const numberToWords = (num) => {\n    // Simple implementation - you can enhance this\n    const ones = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n    ];\n    const tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n    ];\n    const thousands = [\"\", \"thousand\", \"lakh\", \"crore\"];\n\n    if (num === 0) return \"zero\";\n\n    // Simplified conversion - you can implement full conversion\n    return `${Math.floor(num / 1000)} thousand ${Math.floor(\n      num % 1000\n    )} Rupees Only`;\n  };\n\n  const resetForm = () => {\n    setFormData({\n      ...formData,\n      batchNumber: generateBatchNumber(),\n      batchDate: new Date().toISOString().split(\"T\")[0],\n      customer: \"\",\n      site: \"\",\n      recipeCode: \"\",\n      recipeName: \"\",\n      truckNumber: \"\",\n      truckDriver: \"\",\n      orderNumber: \"\",\n      batcherName: \"\",\n      clientName: \"\",\n      clientAddress: \"\",\n      clientEmail: \"\",\n      clientGSTIN: \"\",\n    });\n    setErrors({});\n  };\n\n  return (\n    <div className=\"create-batch-slip\">\n      <div className=\"section-header\">\n        <div className=\"section-title\">\n          <div className=\"section-icon\">📋</div>\n          <h2>Create Batch Slip</h2>\n        </div>\n        <div className=\"header-actions\">\n          <button\n            type=\"button\"\n            className=\"btn btn-generate\"\n            onClick={() =>\n              setFormData((prev) => ({\n                ...prev,\n                batchNumber: generateBatchNumber(),\n              }))\n            }\n          >\n            🔄 Generate New Batch No\n          </button>\n        </div>\n      </div>\n\n      <div className=\"batch-slip-form-container\">\n        <form onSubmit={handleSave} className=\"batch-slip-form\">\n          {/* Header Section */}\n          <div className=\"form-section\">\n            <h3>RR CONSTRUCTIONS</h3>\n          </div>\n\n          {/* Batch Information */}\n          <div className=\"form-section\">\n            <h4>Docket / Batch Report / Autographic Record</h4>\n            <div className=\"form-grid-batch\">\n              <div className=\"form-group\">\n                <label>Plant Serial Number</label>\n                <input\n                  type=\"text\"\n                  name=\"plantSerialNumber\"\n                  value={formData.plantSerialNumber}\n                  onChange={handleInputChange}\n                  readOnly\n                  className=\"readonly\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Batch Date *</label>\n                <input\n                  type=\"date\"\n                  name=\"batchDate\"\n                  value={formData.batchDate}\n                  onChange={handleInputChange}\n                  className={errors.batchDate ? \"error\" : \"\"}\n                />\n                {errors.batchDate && (\n                  <span className=\"error-text\">{errors.batchDate}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Batch Start Time</label>\n                <input\n                  type=\"time\"\n                  name=\"batchStartTime\"\n                  value={formData.batchStartTime}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Batch End Time</label>\n                <input\n                  type=\"time\"\n                  name=\"batchEndTime\"\n                  value={formData.batchEndTime}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Batch Number *</label>\n                <input\n                  type=\"text\"\n                  name=\"batchNumber\"\n                  value={formData.batchNumber}\n                  onChange={handleInputChange}\n                  className={errors.batchNumber ? \"error\" : \"\"}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Customer *</label>\n                <input\n                  type=\"text\"\n                  name=\"customer\"\n                  value={formData.customer}\n                  onChange={handleInputChange}\n                  className={errors.customer ? \"error\" : \"\"}\n                  placeholder=\"Client A\"\n                />\n                {errors.customer && (\n                  <span className=\"error-text\">{errors.customer}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Site</label>\n                <input\n                  type=\"text\"\n                  name=\"site\"\n                  value={formData.site}\n                  onChange={handleInputChange}\n                  placeholder=\"Client A\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Recipe Code *</label>\n                <input\n                  type=\"text\"\n                  name=\"recipeCode\"\n                  value={formData.recipeCode}\n                  onChange={handleInputChange}\n                  className={errors.recipeCode ? \"error\" : \"\"}\n                  placeholder=\"M10\"\n                />\n                {errors.recipeCode && (\n                  <span className=\"error-text\">{errors.recipeCode}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Recipe Name *</label>\n                <input\n                  type=\"text\"\n                  name=\"recipeName\"\n                  value={formData.recipeName}\n                  onChange={handleInputChange}\n                  className={errors.recipeName ? \"error\" : \"\"}\n                  placeholder=\"Default Recipe\"\n                />\n                {errors.recipeName && (\n                  <span className=\"error-text\">{errors.recipeName}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Truck Number *</label>\n                <input\n                  type=\"text\"\n                  name=\"truckNumber\"\n                  value={formData.truckNumber}\n                  onChange={handleInputChange}\n                  className={errors.truckNumber ? \"error\" : \"\"}\n                  placeholder=\"tm123564\"\n                />\n                {errors.truckNumber && (\n                  <span className=\"error-text\">{errors.truckNumber}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Truck Driver *</label>\n                <input\n                  type=\"text\"\n                  name=\"truckDriver\"\n                  value={formData.truckDriver}\n                  onChange={handleInputChange}\n                  className={errors.truckDriver ? \"error\" : \"\"}\n                  placeholder=\"murugesan\"\n                />\n                {errors.truckDriver && (\n                  <span className=\"error-text\">{errors.truckDriver}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Order Number</label>\n                <input\n                  type=\"text\"\n                  name=\"orderNumber\"\n                  value={formData.orderNumber}\n                  onChange={handleInputChange}\n                  placeholder=\"1\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Batcher Name *</label>\n                <input\n                  type=\"text\"\n                  name=\"batcherName\"\n                  value={formData.batcherName}\n                  onChange={handleInputChange}\n                  className={errors.batcherName ? \"error\" : \"\"}\n                  placeholder=\"ss\"\n                />\n                {errors.batcherName && (\n                  <span className=\"error-text\">{errors.batcherName}</span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Quantities Section */}\n          <div className=\"form-section\">\n            <h4>Quantities</h4>\n            <div className=\"form-grid-quantities\">\n              <div className=\"form-group\">\n                <label>Ordered Quantity (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"orderedQuantity\"\n                  value={formData.orderedQuantity}\n                  onChange={handleInputChange}\n                  placeholder=\"10.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Production Quantity (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"productionQuantity\"\n                  value={formData.productionQuantity}\n                  onChange={handleInputChange}\n                  placeholder=\"10.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Adj/Manual Quantity (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"adjManualQuantity\"\n                  value={formData.adjManualQuantity}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>With This Load (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"withThisLoad\"\n                  value={formData.withThisLoad}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Mixer Capacity (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"mixerCapacity\"\n                  value={formData.mixerCapacity}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Batch Size (M³)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"batchSize\"\n                  value={formData.batchSize}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Client Information for Invoice */}\n          {/* Client Information for Invoice */}\n          <div className=\"form-section\">\n            <h4>Client Information (For Invoice)</h4>\n            <div className=\"form-grid-client\">\n              <div className=\"form-group\">\n                <label>Client Name *</label>\n                <input\n                  type=\"text\"\n                  name=\"clientName\"\n                  value={formData.clientName}\n                  onChange={handleInputChange}\n                  className={errors.clientName ? \"error\" : \"\"}\n                  placeholder=\"Client B\"\n                />\n                {errors.clientName && (\n                  <span className=\"error-text\">{errors.clientName}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Client Address *</label>\n                <textarea\n                  name=\"clientAddress\"\n                  value={formData.clientAddress}\n                  onChange={handleInputChange}\n                  className={errors.clientAddress ? \"error\" : \"\"}\n                  placeholder=\"No. 123, Salem Main Road, Salem\"\n                  rows=\"3\"\n                />\n                {errors.clientAddress && (\n                  <span className=\"error-text\">{errors.clientAddress}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Client Email *</label>\n                <input\n                  type=\"email\"\n                  name=\"clientEmail\"\n                  value={formData.clientEmail}\n                  onChange={handleInputChange}\n                  className={errors.clientEmail ? \"error\" : \"\"}\n                  placeholder=\"client@example.com\"\n                />\n                {errors.clientEmail && (\n                  <span className=\"error-text\">{errors.clientEmail}</span>\n                )}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Client Phone</label>\n                <input\n                  type=\"tel\"\n                  name=\"clientPhone\"\n                  value={formData.clientPhone}\n                  onChange={handleInputChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Client GSTIN</label>\n                <input\n                  type=\"text\"\n                  name=\"clientGSTIN\"\n                  value={formData.clientGSTIN}\n                  onChange={handleInputChange}\n                  placeholder=\"N/A\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Invoice Details */}\n          <div className=\"form-section\">\n            <h4>Invoice Details</h4>\n            <div className=\"form-grid-invoice\">\n              <div className=\"form-group\">\n                <label>Description</label>\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  placeholder=\"Concrete M30\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>HSN Code</label>\n                <input\n                  type=\"text\"\n                  name=\"hsn\"\n                  value={formData.hsn}\n                  onChange={handleInputChange}\n                  placeholder=\"6810\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Quantity</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"quantity\"\n                  value={formData.quantity}\n                  onChange={handleInputChange}\n                  placeholder=\"15.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Rate (₹)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"rate\"\n                  value={formData.rate}\n                  onChange={handleInputChange}\n                  placeholder=\"4000.00\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Unit</label>\n                <input\n                  type=\"text\"\n                  name=\"unit\"\n                  value={formData.unit}\n                  onChange={handleInputChange}\n                  placeholder=\"M³\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={resetForm}\n            >\n              Reset Form\n            </button>\n            <button type=\"submit\" className=\"btn btn-save\">\n              Save & Generate Invoice\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateBatchSlip;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}