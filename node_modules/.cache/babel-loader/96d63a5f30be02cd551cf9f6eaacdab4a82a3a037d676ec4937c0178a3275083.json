{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\construction-app\\\\src\\\\components\\\\inward\\\\CreateBatchSlip.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBatchSlip = ({\n  onNavigate\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    batchNumber: \"\",\n    supplierName: \"\",\n    materialType: \"\",\n    quantity: \"\",\n    unit: \"\",\n    rate: \"\",\n    totalAmount: \"\",\n    receivedDate: \"\",\n    qualityCheck: \"Pending\",\n    remarks: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [suppliers, setSuppliers] = useState([]);\n  useEffect(() => {\n    fetchSuppliers();\n    generateBatchNumber();\n  }, []);\n  const fetchSuppliers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/suppliers\");\n      if (response.ok) {\n        const data = await response.json();\n        setSuppliers(data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching suppliers:\", error);\n    }\n  };\n  const generateBatchNumber = () => {\n    const timestamp = Date.now();\n    const batchNumber = `BATCH-${timestamp}`;\n    setFormData(prev => ({\n      ...prev,\n      batchNumber\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.supplierName.trim()) newErrors.supplierName = \"Supplier name is required\";\n    if (!formData.materialType.trim()) newErrors.materialType = \"Material type is required\";\n    if (!formData.quantity || formData.quantity <= 0) newErrors.quantity = \"Valid quantity is required\";\n    if (!formData.unit.trim()) newErrors.unit = \"Unit is required\";\n    if (!formData.rate || formData.rate <= 0) newErrors.rate = \"Valid rate is required\";\n    if (!formData.receivedDate) newErrors.receivedDate = \"Received date is required\";\n    return newErrors;\n  };\n  const calculateTotalAmount = () => {\n    const quantity = Number.parseFloat(formData.quantity) || 0;\n    const rate = Number.parseFloat(formData.rate) || 0;\n    return (quantity * rate).toFixed(2);\n  };\n  useEffect(() => {\n    const total = calculateTotalAmount();\n    setFormData(prev => ({\n      ...prev,\n      totalAmount: total\n    }));\n  }, [formData.quantity, formData.rate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n    setLoading(true);\n    try {\n      // Create batch slip\n      const batchSlipData = {\n        batchNumber: formData.batchNumber,\n        supplierName: formData.supplierName,\n        materialType: formData.materialType,\n        quantity: Number.parseFloat(formData.quantity),\n        unit: formData.unit,\n        rate: Number.parseFloat(formData.rate),\n        totalAmount: Number.parseFloat(formData.totalAmount),\n        receivedDate: formData.receivedDate,\n        qualityCheck: formData.qualityCheck,\n        remarks: formData.remarks\n      };\n      const batchResponse = await fetch(\"http://localhost:5000/batch-slips\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(batchSlipData)\n      });\n      if (batchResponse.ok) {\n        const batchResult = await batchResponse.json();\n\n        // Auto-create invoice entries\n        await createInvoiceEntries(batchResult.id, batchSlipData);\n        alert(\"Batch slip created successfully and invoice entries updated!\");\n        resetForm();\n\n        // Navigate to invoices page to show the updated data\n        if (onNavigate) {\n          onNavigate(\"invoices\");\n        }\n      } else {\n        const errorData = await batchResponse.json();\n        alert(errorData.error || \"Failed to create batch slip\");\n      }\n    } catch (error) {\n      console.error(\"Error creating batch slip:\", error);\n      alert(\"Error creating batch slip\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createInvoiceEntries = async (batchSlipId, batchData) => {\n    try {\n      // Create invoice entry\n      const invoiceData = {\n        batchSlipId: batchSlipId,\n        invoiceNumber: `INV-${batchData.batchNumber}`,\n        supplierName: batchData.supplierName,\n        materialType: batchData.materialType,\n        quantity: batchData.quantity,\n        unit: batchData.unit,\n        rate: batchData.rate,\n        totalAmount: batchData.totalAmount,\n        invoiceDate: batchData.receivedDate,\n        status: \"Pending\"\n      };\n      await fetch(\"http://localhost:5000/invoices\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(invoiceData)\n      });\n\n      // Create invoice payment entry\n      const paymentData = {\n        batchSlipId: batchSlipId,\n        invoiceNumber: invoiceData.invoiceNumber,\n        supplierName: batchData.supplierName,\n        totalAmount: batchData.totalAmount,\n        paidAmount: 0,\n        pendingAmount: batchData.totalAmount,\n        paymentStatus: \"Pending\",\n        dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0] // 30 days from now\n      };\n      await fetch(\"http://localhost:5000/invoice-payments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(paymentData)\n      });\n    } catch (error) {\n      console.error(\"Error creating invoice entries:\", error);\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      batchNumber: \"\",\n      supplierName: \"\",\n      materialType: \"\",\n      quantity: \"\",\n      unit: \"\",\n      rate: \"\",\n      totalAmount: \"\",\n      receivedDate: \"\",\n      qualityCheck: \"Pending\",\n      remarks: \"\"\n    });\n    setErrors({});\n    generateBatchNumber();\n  };\n  const handleSupplierChange = supplierName => {\n    const selectedSupplier = suppliers.find(s => s.supplier_name === supplierName);\n    if (selectedSupplier) {\n      setFormData(prev => ({\n        ...prev,\n        supplierName: supplierName,\n        materialType: selectedSupplier.material_type || \"\"\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        supplierName: supplierName\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-batch-slip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Batch Slip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-slip-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"batch-slip-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Batch Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.batchNumber,\n              readOnly: true,\n              className: \"readonly-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Supplier Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: formData.supplierName,\n              onChange: e => handleSupplierChange(e.target.value),\n              className: errors.supplierName ? \"error\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), suppliers.map(supplier => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: supplier.supplier_name,\n                children: supplier.supplier_name\n              }, supplier.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), errors.supplierName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.supplierName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Material Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.materialType,\n              onChange: e => setFormData({\n                ...formData,\n                materialType: e.target.value\n              }),\n              className: errors.materialType ? \"error\" : \"\",\n              placeholder: \"Enter material type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), errors.materialType && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.materialType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantity *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: formData.quantity,\n              onChange: e => setFormData({\n                ...formData,\n                quantity: e.target.value\n              }),\n              className: errors.quantity ? \"error\" : \"\",\n              placeholder: \"Enter quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), errors.quantity && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: formData.unit,\n              onChange: e => setFormData({\n                ...formData,\n                unit: e.target.value\n              }),\n              className: errors.unit ? \"error\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Tons\",\n                children: \"Tons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cubic Meters\",\n                children: \"Cubic Meters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Bags\",\n                children: \"Bags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pieces\",\n                children: \"Pieces\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Liters\",\n                children: \"Liters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Kilograms\",\n                children: \"Kilograms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), errors.unit && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rate per Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: formData.rate,\n              onChange: e => setFormData({\n                ...formData,\n                rate: e.target.value\n              }),\n              className: errors.rate ? \"error\" : \"\",\n              placeholder: \"Enter rate per unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), errors.rate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.rate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: `₹${formData.totalAmount}`,\n              readOnly: true,\n              className: \"readonly-field total-amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Received Date *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: formData.receivedDate,\n              onChange: e => setFormData({\n                ...formData,\n                receivedDate: e.target.value\n              }),\n              className: errors.receivedDate ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), errors.receivedDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.receivedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quality Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: formData.qualityCheck,\n              onChange: e => setFormData({\n                ...formData,\n                qualityCheck: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Passed\",\n                children: \"Passed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Failed\",\n                children: \"Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Conditional\",\n                children: \"Conditional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Remarks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: formData.remarks,\n              onChange: e => setFormData({\n                ...formData,\n                remarks: e.target.value\n              }),\n              placeholder: \"Enter any remarks or notes\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-cancel\",\n            onClick: resetForm,\n            disabled: loading,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-save\",\n            disabled: loading,\n            children: loading ? \"Creating...\" : \"Create Batch Slip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .batch-slip-form-container {\n          background: white;\n          padding: 30px;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          max-width: 1000px;\n          margin: 0 auto;\n        }\n        \n        .readonly-field {\n          background-color: #f8f9fa;\n          color: #6c757d;\n          cursor: not-allowed;\n        }\n        \n        .total-amount {\n          font-weight: bold;\n          font-size: 16px;\n          color: #28a745;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBatchSlip, \"ZT6dv6R6QTjEsez6Sa/75Y6rn9A=\");\n_c = CreateBatchSlip;\nexport default CreateBatchSlip;\nvar _c;\n$RefreshReg$(_c, \"CreateBatchSlip\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","CreateBatchSlip","onNavigate","formData","setFormData","batchNumber","supplierName","materialType","quantity","unit","rate","totalAmount","receivedDate","qualityCheck","remarks","errors","setErrors","loading","setLoading","suppliers","setSuppliers","fetchSuppliers","generateBatchNumber","response","fetch","ok","data","json","error","console","timestamp","Date","now","prev","validateForm","newErrors","trim","calculateTotalAmount","Number","parseFloat","toFixed","total","handleSubmit","e","preventDefault","formErrors","Object","keys","length","batchSlipData","batchResponse","method","headers","body","JSON","stringify","batchResult","createInvoiceEntries","id","alert","resetForm","errorData","batchSlipId","batchData","invoiceData","invoiceNumber","invoiceDate","status","paymentData","paidAmount","pendingAmount","paymentStatus","dueDate","toISOString","split","handleSupplierChange","selectedSupplier","find","s","supplier_name","material_type","className","children","fileName","lineNumber","columnNumber","onSubmit","type","value","readOnly","onChange","target","map","supplier","placeholder","step","rows","onClick","disabled","jsx","_c","$RefreshReg$"],"sources":["E:/construction-app/src/components/inward/CreateBatchSlip.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\n\nconst CreateBatchSlip = ({ onNavigate }) => {\n  const [formData, setFormData] = useState({\n    batchNumber: \"\",\n    supplierName: \"\",\n    materialType: \"\",\n    quantity: \"\",\n    unit: \"\",\n    rate: \"\",\n    totalAmount: \"\",\n    receivedDate: \"\",\n    qualityCheck: \"Pending\",\n    remarks: \"\",\n  })\n  const [errors, setErrors] = useState({})\n  const [loading, setLoading] = useState(false)\n  const [suppliers, setSuppliers] = useState([])\n\n  useEffect(() => {\n    fetchSuppliers()\n    generateBatchNumber()\n  }, [])\n\n  const fetchSuppliers = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/suppliers\")\n      if (response.ok) {\n        const data = await response.json()\n        setSuppliers(data)\n      }\n    } catch (error) {\n      console.error(\"Error fetching suppliers:\", error)\n    }\n  }\n\n  const generateBatchNumber = () => {\n    const timestamp = Date.now()\n    const batchNumber = `BATCH-${timestamp}`\n    setFormData((prev) => ({ ...prev, batchNumber }))\n  }\n\n  const validateForm = () => {\n    const newErrors = {}\n\n    if (!formData.supplierName.trim()) newErrors.supplierName = \"Supplier name is required\"\n    if (!formData.materialType.trim()) newErrors.materialType = \"Material type is required\"\n    if (!formData.quantity || formData.quantity <= 0) newErrors.quantity = \"Valid quantity is required\"\n    if (!formData.unit.trim()) newErrors.unit = \"Unit is required\"\n    if (!formData.rate || formData.rate <= 0) newErrors.rate = \"Valid rate is required\"\n    if (!formData.receivedDate) newErrors.receivedDate = \"Received date is required\"\n\n    return newErrors\n  }\n\n  const calculateTotalAmount = () => {\n    const quantity = Number.parseFloat(formData.quantity) || 0\n    const rate = Number.parseFloat(formData.rate) || 0\n    return (quantity * rate).toFixed(2)\n  }\n\n  useEffect(() => {\n    const total = calculateTotalAmount()\n    setFormData((prev) => ({ ...prev, totalAmount: total }))\n  }, [formData.quantity, formData.rate])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const formErrors = validateForm()\n\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors)\n      return\n    }\n\n    setLoading(true)\n\n    try {\n      // Create batch slip\n      const batchSlipData = {\n        batchNumber: formData.batchNumber,\n        supplierName: formData.supplierName,\n        materialType: formData.materialType,\n        quantity: Number.parseFloat(formData.quantity),\n        unit: formData.unit,\n        rate: Number.parseFloat(formData.rate),\n        totalAmount: Number.parseFloat(formData.totalAmount),\n        receivedDate: formData.receivedDate,\n        qualityCheck: formData.qualityCheck,\n        remarks: formData.remarks,\n      }\n\n      const batchResponse = await fetch(\"http://localhost:5000/batch-slips\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(batchSlipData),\n      })\n\n      if (batchResponse.ok) {\n        const batchResult = await batchResponse.json()\n\n        // Auto-create invoice entries\n        await createInvoiceEntries(batchResult.id, batchSlipData)\n\n        alert(\"Batch slip created successfully and invoice entries updated!\")\n        resetForm()\n\n        // Navigate to invoices page to show the updated data\n        if (onNavigate) {\n          onNavigate(\"invoices\")\n        }\n      } else {\n        const errorData = await batchResponse.json()\n        alert(errorData.error || \"Failed to create batch slip\")\n      }\n    } catch (error) {\n      console.error(\"Error creating batch slip:\", error)\n      alert(\"Error creating batch slip\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const createInvoiceEntries = async (batchSlipId, batchData) => {\n    try {\n      // Create invoice entry\n      const invoiceData = {\n        batchSlipId: batchSlipId,\n        invoiceNumber: `INV-${batchData.batchNumber}`,\n        supplierName: batchData.supplierName,\n        materialType: batchData.materialType,\n        quantity: batchData.quantity,\n        unit: batchData.unit,\n        rate: batchData.rate,\n        totalAmount: batchData.totalAmount,\n        invoiceDate: batchData.receivedDate,\n        status: \"Pending\",\n      }\n\n      await fetch(\"http://localhost:5000/invoices\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(invoiceData),\n      })\n\n      // Create invoice payment entry\n      const paymentData = {\n        batchSlipId: batchSlipId,\n        invoiceNumber: invoiceData.invoiceNumber,\n        supplierName: batchData.supplierName,\n        totalAmount: batchData.totalAmount,\n        paidAmount: 0,\n        pendingAmount: batchData.totalAmount,\n        paymentStatus: \"Pending\",\n        dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0], // 30 days from now\n      }\n\n      await fetch(\"http://localhost:5000/invoice-payments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(paymentData),\n      })\n    } catch (error) {\n      console.error(\"Error creating invoice entries:\", error)\n    }\n  }\n\n  const resetForm = () => {\n    setFormData({\n      batchNumber: \"\",\n      supplierName: \"\",\n      materialType: \"\",\n      quantity: \"\",\n      unit: \"\",\n      rate: \"\",\n      totalAmount: \"\",\n      receivedDate: \"\",\n      qualityCheck: \"Pending\",\n      remarks: \"\",\n    })\n    setErrors({})\n    generateBatchNumber()\n  }\n\n  const handleSupplierChange = (supplierName) => {\n    const selectedSupplier = suppliers.find((s) => s.supplier_name === supplierName)\n    if (selectedSupplier) {\n      setFormData((prev) => ({\n        ...prev,\n        supplierName: supplierName,\n        materialType: selectedSupplier.material_type || \"\",\n      }))\n    } else {\n      setFormData((prev) => ({ ...prev, supplierName: supplierName }))\n    }\n  }\n\n  return (\n    <div className=\"create-batch-slip\">\n      <div className=\"section-header\">\n        <div className=\"section-title\">\n          <div className=\"section-icon\">📝</div>\n          <h2>Create Batch Slip</h2>\n        </div>\n      </div>\n\n      <div className=\"batch-slip-form-container\">\n        <form onSubmit={handleSubmit} className=\"batch-slip-form\">\n          <div className=\"form-grid\">\n            <div className=\"form-group\">\n              <label>Batch Number</label>\n              <input type=\"text\" value={formData.batchNumber} readOnly className=\"readonly-field\" />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Supplier Name *</label>\n              <select\n                value={formData.supplierName}\n                onChange={(e) => handleSupplierChange(e.target.value)}\n                className={errors.supplierName ? \"error\" : \"\"}\n              >\n                <option value=\"\">Select Supplier</option>\n                {suppliers.map((supplier) => (\n                  <option key={supplier.id} value={supplier.supplier_name}>\n                    {supplier.supplier_name}\n                  </option>\n                ))}\n              </select>\n              {errors.supplierName && <span className=\"error-text\">{errors.supplierName}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Material Type *</label>\n              <input\n                type=\"text\"\n                value={formData.materialType}\n                onChange={(e) => setFormData({ ...formData, materialType: e.target.value })}\n                className={errors.materialType ? \"error\" : \"\"}\n                placeholder=\"Enter material type\"\n              />\n              {errors.materialType && <span className=\"error-text\">{errors.materialType}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Quantity *</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={formData.quantity}\n                onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n                className={errors.quantity ? \"error\" : \"\"}\n                placeholder=\"Enter quantity\"\n              />\n              {errors.quantity && <span className=\"error-text\">{errors.quantity}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Unit *</label>\n              <select\n                value={formData.unit}\n                onChange={(e) => setFormData({ ...formData, unit: e.target.value })}\n                className={errors.unit ? \"error\" : \"\"}\n              >\n                <option value=\"\">Select Unit</option>\n                <option value=\"Tons\">Tons</option>\n                <option value=\"Cubic Meters\">Cubic Meters</option>\n                <option value=\"Bags\">Bags</option>\n                <option value=\"Pieces\">Pieces</option>\n                <option value=\"Liters\">Liters</option>\n                <option value=\"Kilograms\">Kilograms</option>\n              </select>\n              {errors.unit && <span className=\"error-text\">{errors.unit}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Rate per Unit *</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={formData.rate}\n                onChange={(e) => setFormData({ ...formData, rate: e.target.value })}\n                className={errors.rate ? \"error\" : \"\"}\n                placeholder=\"Enter rate per unit\"\n              />\n              {errors.rate && <span className=\"error-text\">{errors.rate}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Total Amount</label>\n              <input type=\"text\" value={`₹${formData.totalAmount}`} readOnly className=\"readonly-field total-amount\" />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Received Date *</label>\n              <input\n                type=\"date\"\n                value={formData.receivedDate}\n                onChange={(e) => setFormData({ ...formData, receivedDate: e.target.value })}\n                className={errors.receivedDate ? \"error\" : \"\"}\n              />\n              {errors.receivedDate && <span className=\"error-text\">{errors.receivedDate}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Quality Check</label>\n              <select\n                value={formData.qualityCheck}\n                onChange={(e) => setFormData({ ...formData, qualityCheck: e.target.value })}\n              >\n                <option value=\"Pending\">Pending</option>\n                <option value=\"Passed\">Passed</option>\n                <option value=\"Failed\">Failed</option>\n                <option value=\"Conditional\">Conditional</option>\n              </select>\n            </div>\n\n            <div className=\"form-group full-width\">\n              <label>Remarks</label>\n              <textarea\n                value={formData.remarks}\n                onChange={(e) => setFormData({ ...formData, remarks: e.target.value })}\n                placeholder=\"Enter any remarks or notes\"\n                rows=\"3\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm} disabled={loading}>\n              Reset\n            </button>\n            <button type=\"submit\" className=\"btn btn-save\" disabled={loading}>\n              {loading ? \"Creating...\" : \"Create Batch Slip\"}\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <style jsx>{`\n        .batch-slip-form-container {\n          background: white;\n          padding: 30px;\n          border-radius: 8px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n          max-width: 1000px;\n          margin: 0 auto;\n        }\n        \n        .readonly-field {\n          background-color: #f8f9fa;\n          color: #6c757d;\n          cursor: not-allowed;\n        }\n        \n        .total-amount {\n          font-weight: bold;\n          font-size: 16px;\n          color: #28a745;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default CreateBatchSlip\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAP,EAAA;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,SAAS;IACvBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACduB,cAAc,CAAC,CAAC;IAChBC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,YAAY,CAACM,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMN,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMQ,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAM3B,WAAW,GAAG,SAASyB,SAAS,EAAE;IACxC1B,WAAW,CAAE6B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE5B;IAAY,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAAChC,QAAQ,CAACG,YAAY,CAAC8B,IAAI,CAAC,CAAC,EAAED,SAAS,CAAC7B,YAAY,GAAG,2BAA2B;IACvF,IAAI,CAACH,QAAQ,CAACI,YAAY,CAAC6B,IAAI,CAAC,CAAC,EAAED,SAAS,CAAC5B,YAAY,GAAG,2BAA2B;IACvF,IAAI,CAACJ,QAAQ,CAACK,QAAQ,IAAIL,QAAQ,CAACK,QAAQ,IAAI,CAAC,EAAE2B,SAAS,CAAC3B,QAAQ,GAAG,4BAA4B;IACnG,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC2B,IAAI,CAAC,CAAC,EAAED,SAAS,CAAC1B,IAAI,GAAG,kBAAkB;IAC9D,IAAI,CAACN,QAAQ,CAACO,IAAI,IAAIP,QAAQ,CAACO,IAAI,IAAI,CAAC,EAAEyB,SAAS,CAACzB,IAAI,GAAG,wBAAwB;IACnF,IAAI,CAACP,QAAQ,CAACS,YAAY,EAAEuB,SAAS,CAACvB,YAAY,GAAG,2BAA2B;IAEhF,OAAOuB,SAAS;EAClB,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAM7B,QAAQ,GAAG8B,MAAM,CAACC,UAAU,CAACpC,QAAQ,CAACK,QAAQ,CAAC,IAAI,CAAC;IAC1D,MAAME,IAAI,GAAG4B,MAAM,CAACC,UAAU,CAACpC,QAAQ,CAACO,IAAI,CAAC,IAAI,CAAC;IAClD,OAAO,CAACF,QAAQ,GAAGE,IAAI,EAAE8B,OAAO,CAAC,CAAC,CAAC;EACrC,CAAC;EAED1C,SAAS,CAAC,MAAM;IACd,MAAM2C,KAAK,GAAGJ,oBAAoB,CAAC,CAAC;IACpCjC,WAAW,CAAE6B,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEtB,WAAW,EAAE8B;IAAM,CAAC,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACtC,QAAQ,CAACK,QAAQ,EAAEL,QAAQ,CAACO,IAAI,CAAC,CAAC;EAEtC,MAAMgC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,UAAU,GAAGX,YAAY,CAAC,CAAC;IAEjC,IAAIY,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MACtChC,SAAS,CAAC6B,UAAU,CAAC;MACrB;IACF;IAEA3B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAM+B,aAAa,GAAG;QACpB5C,WAAW,EAAEF,QAAQ,CAACE,WAAW;QACjCC,YAAY,EAAEH,QAAQ,CAACG,YAAY;QACnCC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;QACnCC,QAAQ,EAAE8B,MAAM,CAACC,UAAU,CAACpC,QAAQ,CAACK,QAAQ,CAAC;QAC9CC,IAAI,EAAEN,QAAQ,CAACM,IAAI;QACnBC,IAAI,EAAE4B,MAAM,CAACC,UAAU,CAACpC,QAAQ,CAACO,IAAI,CAAC;QACtCC,WAAW,EAAE2B,MAAM,CAACC,UAAU,CAACpC,QAAQ,CAACQ,WAAW,CAAC;QACpDC,YAAY,EAAET,QAAQ,CAACS,YAAY;QACnCC,YAAY,EAAEV,QAAQ,CAACU,YAAY;QACnCC,OAAO,EAAEX,QAAQ,CAACW;MACpB,CAAC;MAED,MAAMoC,aAAa,GAAG,MAAM1B,KAAK,CAAC,mCAAmC,EAAE;QACrE2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,aAAa;MACpC,CAAC,CAAC;MAEF,IAAIC,aAAa,CAACzB,EAAE,EAAE;QACpB,MAAM+B,WAAW,GAAG,MAAMN,aAAa,CAACvB,IAAI,CAAC,CAAC;;QAE9C;QACA,MAAM8B,oBAAoB,CAACD,WAAW,CAACE,EAAE,EAAET,aAAa,CAAC;QAEzDU,KAAK,CAAC,8DAA8D,CAAC;QACrEC,SAAS,CAAC,CAAC;;QAEX;QACA,IAAI1D,UAAU,EAAE;UACdA,UAAU,CAAC,UAAU,CAAC;QACxB;MACF,CAAC,MAAM;QACL,MAAM2D,SAAS,GAAG,MAAMX,aAAa,CAACvB,IAAI,CAAC,CAAC;QAC5CgC,KAAK,CAACE,SAAS,CAACjC,KAAK,IAAI,6BAA6B,CAAC;MACzD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD+B,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,SAAS;MACRzC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMuC,oBAAoB,GAAG,MAAAA,CAAOK,WAAW,EAAEC,SAAS,KAAK;IAC7D,IAAI;MACF;MACA,MAAMC,WAAW,GAAG;QAClBF,WAAW,EAAEA,WAAW;QACxBG,aAAa,EAAE,OAAOF,SAAS,CAAC1D,WAAW,EAAE;QAC7CC,YAAY,EAAEyD,SAAS,CAACzD,YAAY;QACpCC,YAAY,EAAEwD,SAAS,CAACxD,YAAY;QACpCC,QAAQ,EAAEuD,SAAS,CAACvD,QAAQ;QAC5BC,IAAI,EAAEsD,SAAS,CAACtD,IAAI;QACpBC,IAAI,EAAEqD,SAAS,CAACrD,IAAI;QACpBC,WAAW,EAAEoD,SAAS,CAACpD,WAAW;QAClCuD,WAAW,EAAEH,SAAS,CAACnD,YAAY;QACnCuD,MAAM,EAAE;MACV,CAAC;MAED,MAAM3C,KAAK,CAAC,gCAAgC,EAAE;QAC5C2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACS,WAAW;MAClC,CAAC,CAAC;;MAEF;MACA,MAAMI,WAAW,GAAG;QAClBN,WAAW,EAAEA,WAAW;QACxBG,aAAa,EAAED,WAAW,CAACC,aAAa;QACxC3D,YAAY,EAAEyD,SAAS,CAACzD,YAAY;QACpCK,WAAW,EAAEoD,SAAS,CAACpD,WAAW;QAClC0D,UAAU,EAAE,CAAC;QACbC,aAAa,EAAEP,SAAS,CAACpD,WAAW;QACpC4D,aAAa,EAAE,SAAS;QACxBC,OAAO,EAAE,IAAIzC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACyC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;MACxF,CAAC;MAED,MAAMlD,KAAK,CAAC,wCAAwC,EAAE;QACpD2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,WAAW;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMgC,SAAS,GAAGA,CAAA,KAAM;IACtBxD,WAAW,CAAC;MACVC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,SAAS;MACvBC,OAAO,EAAE;IACX,CAAC,CAAC;IACFE,SAAS,CAAC,CAAC,CAAC,CAAC;IACbM,mBAAmB,CAAC,CAAC;EACvB,CAAC;EAED,MAAMqD,oBAAoB,GAAIrE,YAAY,IAAK;IAC7C,MAAMsE,gBAAgB,GAAGzD,SAAS,CAAC0D,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,aAAa,KAAKzE,YAAY,CAAC;IAChF,IAAIsE,gBAAgB,EAAE;MACpBxE,WAAW,CAAE6B,IAAI,KAAM;QACrB,GAAGA,IAAI;QACP3B,YAAY,EAAEA,YAAY;QAC1BC,YAAY,EAAEqE,gBAAgB,CAACI,aAAa,IAAI;MAClD,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL5E,WAAW,CAAE6B,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE3B,YAAY,EAAEA;MAAa,CAAC,CAAC,CAAC;IAClE;EACF,CAAC;EAED,oBACEN,OAAA;IAAKiF,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClF,OAAA;MAAKiF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BlF,OAAA;QAAKiF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BlF,OAAA;UAAKiF,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAzF,YAAA;UAAA0F,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCrF,OAAA;UAAAkF,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAzF,YAAA;UAAA0F,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAF,QAAA,EAAAzF,YAAA;QAAA0F,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAF,QAAA,EAAAzF,YAAA;MAAA0F,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrF,OAAA;MAAKiF,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACxClF,OAAA;QAAMsF,QAAQ,EAAE5C,YAAa;QAACuC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACvDlF,OAAA;UAAKiF,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBlF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAY;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3BrF,OAAA;cAAOuF,IAAI,EAAC,MAAM;cAACC,KAAK,EAAErF,QAAQ,CAACE,WAAY;cAACoF,QAAQ;cAACR,SAAS,EAAC;YAAgB;cAAAE,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACnF,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAe;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9BrF,OAAA;cACEwF,KAAK,EAAErF,QAAQ,CAACG,YAAa;cAC7BoF,QAAQ,EAAG/C,CAAC,IAAKgC,oBAAoB,CAAChC,CAAC,CAACgD,MAAM,CAACH,KAAK,CAAE;cACtDP,SAAS,EAAElE,MAAM,CAACT,YAAY,GAAG,OAAO,GAAG,EAAG;cAAA4E,QAAA,gBAE9ClF,OAAA;gBAAQwF,KAAK,EAAC,EAAE;gBAAAN,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACxClE,SAAS,CAACyE,GAAG,CAAEC,QAAQ,iBACtB7F,OAAA;gBAA0BwF,KAAK,EAAEK,QAAQ,CAACd,aAAc;gBAAAG,QAAA,EACrDW,QAAQ,CAACd;cAAa,GADZc,QAAQ,CAACnC,EAAE;gBAAAyB,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CACT,CAAC;YAAA;cAAAF,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,EACRtE,MAAM,CAACT,YAAY,iBAAIN,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACT;YAAY;cAAA6E,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAe;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9BrF,OAAA;cACEuF,IAAI,EAAC,MAAM;cACXC,KAAK,EAAErF,QAAQ,CAACI,YAAa;cAC7BmF,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEI,YAAY,EAAEoC,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cAC5EP,SAAS,EAAElE,MAAM,CAACR,YAAY,GAAG,OAAO,GAAG,EAAG;cAC9CuF,WAAW,EAAC;YAAqB;cAAAX,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,EACDtE,MAAM,CAACR,YAAY,iBAAIP,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACR;YAAY;cAAA4E,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAU;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzBrF,OAAA;cACEuF,IAAI,EAAC,QAAQ;cACbQ,IAAI,EAAC,MAAM;cACXP,KAAK,EAAErF,QAAQ,CAACK,QAAS;cACzBkF,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEK,QAAQ,EAAEmC,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cACxEP,SAAS,EAAElE,MAAM,CAACP,QAAQ,GAAG,OAAO,GAAG,EAAG;cAC1CsF,WAAW,EAAC;YAAgB;cAAAX,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,EACDtE,MAAM,CAACP,QAAQ,iBAAIR,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACP;YAAQ;cAAA2E,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAM;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBrF,OAAA;cACEwF,KAAK,EAAErF,QAAQ,CAACM,IAAK;cACrBiF,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEM,IAAI,EAAEkC,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cACpEP,SAAS,EAAElE,MAAM,CAACN,IAAI,GAAG,OAAO,GAAG,EAAG;cAAAyE,QAAA,gBAEtClF,OAAA;gBAAQwF,KAAK,EAAC,EAAE;gBAAAN,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrCrF,OAAA;gBAAQwF,KAAK,EAAC,MAAM;gBAAAN,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClCrF,OAAA;gBAAQwF,KAAK,EAAC,cAAc;gBAAAN,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClDrF,OAAA;gBAAQwF,KAAK,EAAC,MAAM;gBAAAN,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClCrF,OAAA;gBAAQwF,KAAK,EAAC,QAAQ;gBAAAN,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrF,OAAA;gBAAQwF,KAAK,EAAC,QAAQ;gBAAAN,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrF,OAAA;gBAAQwF,KAAK,EAAC,WAAW;gBAAAN,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAF,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,EACRtE,MAAM,CAACN,IAAI,iBAAIT,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACN;YAAI;cAAA0E,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAe;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9BrF,OAAA;cACEuF,IAAI,EAAC,QAAQ;cACbQ,IAAI,EAAC,MAAM;cACXP,KAAK,EAAErF,QAAQ,CAACO,IAAK;cACrBgF,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEO,IAAI,EAAEiC,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cACpEP,SAAS,EAAElE,MAAM,CAACL,IAAI,GAAG,OAAO,GAAG,EAAG;cACtCoF,WAAW,EAAC;YAAqB;cAAAX,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,EACDtE,MAAM,CAACL,IAAI,iBAAIV,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACL;YAAI;cAAAyE,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAY;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3BrF,OAAA;cAAOuF,IAAI,EAAC,MAAM;cAACC,KAAK,EAAE,IAAIrF,QAAQ,CAACQ,WAAW,EAAG;cAAC8E,QAAQ;cAACR,SAAS,EAAC;YAA6B;cAAAE,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACtG,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAe;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9BrF,OAAA;cACEuF,IAAI,EAAC,MAAM;cACXC,KAAK,EAAErF,QAAQ,CAACS,YAAa;cAC7B8E,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAES,YAAY,EAAE+B,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cAC5EP,SAAS,EAAElE,MAAM,CAACH,YAAY,GAAG,OAAO,GAAG;YAAG;cAAAuE,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,EACDtE,MAAM,CAACH,YAAY,iBAAIZ,OAAA;cAAMiF,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEnE,MAAM,CAACH;YAAY;cAAAuE,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlF,OAAA;cAAAkF,QAAA,EAAO;YAAa;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5BrF,OAAA;cACEwF,KAAK,EAAErF,QAAQ,CAACU,YAAa;cAC7B6E,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEU,YAAY,EAAE8B,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cAAAN,QAAA,gBAE5ElF,OAAA;gBAAQwF,KAAK,EAAC,SAAS;gBAAAN,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxCrF,OAAA;gBAAQwF,KAAK,EAAC,QAAQ;gBAAAN,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrF,OAAA;gBAAQwF,KAAK,EAAC,QAAQ;gBAAAN,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCrF,OAAA;gBAAQwF,KAAK,EAAC,aAAa;gBAAAN,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAzF,YAAA;gBAAA0F,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAF,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENrF,OAAA;YAAKiF,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpClF,OAAA;cAAAkF,QAAA,EAAO;YAAO;cAAAC,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtBrF,OAAA;cACEwF,KAAK,EAAErF,QAAQ,CAACW,OAAQ;cACxB4E,QAAQ,EAAG/C,CAAC,IAAKvC,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEW,OAAO,EAAE6B,CAAC,CAACgD,MAAM,CAACH;cAAM,CAAC,CAAE;cACvEM,WAAW,EAAC,4BAA4B;cACxCE,IAAI,EAAC;YAAG;cAAAb,QAAA,EAAAzF,YAAA;cAAA0F,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAF,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAF,QAAA,EAAAzF,YAAA;UAAA0F,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrF,OAAA;UAAKiF,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BlF,OAAA;YAAQuF,IAAI,EAAC,QAAQ;YAACN,SAAS,EAAC,gBAAgB;YAACgB,OAAO,EAAErC,SAAU;YAACsC,QAAQ,EAAEjF,OAAQ;YAAAiE,QAAA,EAAC;UAExF;YAAAC,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrF,OAAA;YAAQuF,IAAI,EAAC,QAAQ;YAACN,SAAS,EAAC,cAAc;YAACiB,QAAQ,EAAEjF,OAAQ;YAAAiE,QAAA,EAC9DjE,OAAO,GAAG,aAAa,GAAG;UAAmB;YAAAkE,QAAA,EAAAzF,YAAA;YAAA0F,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAF,QAAA,EAAAzF,YAAA;UAAA0F,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAF,QAAA,EAAAzF,YAAA;QAAA0F,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAF,QAAA,EAAAzF,YAAA;MAAA0F,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENrF,OAAA;MAAOmG,GAAG;MAAAjB,QAAA,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAzF,YAAA;MAAA0F,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAF,QAAA,EAAAzF,YAAA;IAAA0F,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAA1F,EAAA,CA9WKM,eAAe;AAAAmG,EAAA,GAAfnG,eAAe;AAgXrB,eAAeA,eAAe;AAAA,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}