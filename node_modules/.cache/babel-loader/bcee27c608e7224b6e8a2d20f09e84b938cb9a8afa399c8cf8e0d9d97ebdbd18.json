{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\construction-app\\\\src\\\\components\\\\masters\\\\BranchManagement.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BranchManagement = () => {\n  _s();\n  const [branches, setBranches] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingBranch, setEditingBranch] = useState(null);\n  const [formData, setFormData] = useState({\n    branchName: \"\",\n    address: \"\",\n    contactNumber: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const savedBranches = localStorage.getItem(\"branches\");\n    if (savedBranches) {\n      setBranches(JSON.parse(savedBranches));\n    }\n  }, []);\n  const saveBranches = branchList => {\n    localStorage.setItem(\"branches\", JSON.stringify(branchList));\n    setBranches(branchList);\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.branchName.trim()) newErrors.branchName = \"Branch name is required\";\n    if (!formData.address.trim()) newErrors.address = \"Address is required\";\n    if (!formData.contactNumber.trim()) newErrors.contactNumber = \"Contact number is required\";\n    const phoneRegex = /^[0-9]{10}$/;\n    if (formData.contactNumber && !phoneRegex.test(formData.contactNumber)) {\n      newErrors.contactNumber = \"Contact number must be 10 digits\";\n    }\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors);\n      return;\n    }\n    const newBranch = {\n      ...formData,\n      id: editingBranch ? editingBranch.id : Date.now(),\n      createdAt: editingBranch ? editingBranch.createdAt : new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    let updatedBranches;\n    if (editingBranch) {\n      updatedBranches = branches.map(branch => branch.id === editingBranch.id ? newBranch : branch);\n    } else {\n      updatedBranches = [...branches, newBranch];\n    }\n    saveBranches(updatedBranches);\n    resetForm();\n  };\n  const resetForm = () => {\n    setFormData({\n      branchName: \"\",\n      address: \"\",\n      contactNumber: \"\"\n    });\n    setErrors({});\n    setShowForm(false);\n    setEditingBranch(null);\n  };\n  const handleEdit = branch => {\n    setFormData(branch);\n    setEditingBranch(branch);\n    setShowForm(true);\n  };\n  const handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this branch?\")) {\n      const updatedBranches = branches.filter(branch => branch.id !== id);\n      saveBranches(updatedBranches);\n    }\n  };\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(branches);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Branches\");\n    XLSX.writeFile(workbook, \"branches.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"branch-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-icon\",\n          children: \"\\uD83C\\uDFE2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Branch Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-export\",\n          onClick: exportToExcel,\n          children: \"\\uD83D\\uDCCA Export Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-add\",\n          onClick: () => setShowForm(true),\n          children: \"\\u2795 Add Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingBranch ? \"Edit Branch\" : \"Add New Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: resetForm,\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"branch-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Branch Name *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.branchName,\n                onChange: e => setFormData({\n                  ...formData,\n                  branchName: e.target.value\n                }),\n                className: errors.branchName ? \"error\" : \"\",\n                placeholder: \"Enter branch name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), errors.branchName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.branchName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Contact Number *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                value: formData.contactNumber,\n                onChange: e => setFormData({\n                  ...formData,\n                  contactNumber: e.target.value\n                }),\n                className: errors.contactNumber ? \"error\" : \"\",\n                placeholder: \"Enter contact number\",\n                maxLength: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), errors.contactNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.contactNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group full-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.address,\n                onChange: e => setFormData({\n                  ...formData,\n                  address: e.target.value\n                }),\n                className: errors.address ? \"error\" : \"\",\n                placeholder: \"Enter branch address\",\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), errors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-text\",\n                children: errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-cancel\",\n              onClick: resetForm,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-save\",\n              children: [editingBranch ? \"Update\" : \"Save\", \" Branch\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branches-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Branch Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: branches.map((branch, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: branch.branchName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: branch.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: branch.contactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(branch.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-edit\",\n                  onClick: () => handleEdit(branch),\n                  title: \"Edit Branch\",\n                  children: \"\\u270F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-delete\",\n                  onClick: () => handleDelete(branch.id),\n                  title: \"Delete Branch\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, branch.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), branches.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No branches found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(BranchManagement, \"wgYTanLMO7oMksPdW9IQC9Gd350=\");\n_c = BranchManagement;\nexport default BranchManagement;\nvar _c;\n$RefreshReg$(_c, \"BranchManagement\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","XLSX","jsxDEV","_jsxDEV","BranchManagement","branches","setBranches","showForm","setShowForm","editingBranch","setEditingBranch","formData","setFormData","branchName","address","contactNumber","errors","setErrors","savedBranches","localStorage","getItem","JSON","parse","saveBranches","branchList","setItem","stringify","validateForm","newErrors","trim","phoneRegex","test","handleSubmit","e","preventDefault","formErrors","Object","keys","length","newBranch","id","Date","now","createdAt","toISOString","updatedAt","updatedBranches","map","branch","resetForm","handleEdit","handleDelete","window","confirm","filter","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","className","children","fileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","maxLength","rows","index","toLocaleDateString","title","_c","$RefreshReg$"],"sources":["D:/construction-app/src/components/masters/BranchManagement.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport * as XLSX from \"xlsx\"\n\nconst BranchManagement = () => {\n  const [branches, setBranches] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [editingBranch, setEditingBranch] = useState(null)\n  const [formData, setFormData] = useState({\n    branchName: \"\",\n    address: \"\",\n    contactNumber: \"\",\n  })\n  const [errors, setErrors] = useState({})\n\n  useEffect(() => {\n    const savedBranches = localStorage.getItem(\"branches\")\n    if (savedBranches) {\n      setBranches(JSON.parse(savedBranches))\n    }\n  }, [])\n\n  const saveBranches = (branchList) => {\n    localStorage.setItem(\"branches\", JSON.stringify(branchList))\n    setBranches(branchList)\n  }\n\n  const validateForm = () => {\n    const newErrors = {}\n\n    if (!formData.branchName.trim()) newErrors.branchName = \"Branch name is required\"\n    if (!formData.address.trim()) newErrors.address = \"Address is required\"\n    if (!formData.contactNumber.trim()) newErrors.contactNumber = \"Contact number is required\"\n\n    const phoneRegex = /^[0-9]{10}$/\n    if (formData.contactNumber && !phoneRegex.test(formData.contactNumber)) {\n      newErrors.contactNumber = \"Contact number must be 10 digits\"\n    }\n\n    return newErrors\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const formErrors = validateForm()\n\n    if (Object.keys(formErrors).length > 0) {\n      setErrors(formErrors)\n      return\n    }\n\n    const newBranch = {\n      ...formData,\n      id: editingBranch ? editingBranch.id : Date.now(),\n      createdAt: editingBranch ? editingBranch.createdAt : new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    }\n\n    let updatedBranches\n    if (editingBranch) {\n      updatedBranches = branches.map((branch) => (branch.id === editingBranch.id ? newBranch : branch))\n    } else {\n      updatedBranches = [...branches, newBranch]\n    }\n\n    saveBranches(updatedBranches)\n    resetForm()\n  }\n\n  const resetForm = () => {\n    setFormData({\n      branchName: \"\",\n      address: \"\",\n      contactNumber: \"\",\n    })\n    setErrors({})\n    setShowForm(false)\n    setEditingBranch(null)\n  }\n\n  const handleEdit = (branch) => {\n    setFormData(branch)\n    setEditingBranch(branch)\n    setShowForm(true)\n  }\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this branch?\")) {\n      const updatedBranches = branches.filter((branch) => branch.id !== id)\n      saveBranches(updatedBranches)\n    }\n  }\n\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(branches)\n    const workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Branches\")\n    XLSX.writeFile(workbook, \"branches.xlsx\")\n  }\n\n  return (\n    <div className=\"branch-management\">\n      <div className=\"section-header\">\n        <div className=\"section-title\">\n          <div className=\"section-icon\">🏢</div>\n          <h2>Branch Management</h2>\n        </div>\n        <div className=\"header-actions\">\n          <button className=\"btn btn-export\" onClick={exportToExcel}>\n            📊 Export Excel\n          </button>\n          <button className=\"btn btn-add\" onClick={() => setShowForm(true)}>\n            ➕ Add Branch\n          </button>\n        </div>\n      </div>\n\n      {showForm && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>{editingBranch ? \"Edit Branch\" : \"Add New Branch\"}</h3>\n              <button className=\"close-btn\" onClick={resetForm}>\n                ✕\n              </button>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"branch-form\">\n              <div className=\"form-grid\">\n                <div className=\"form-group\">\n                  <label>Branch Name *</label>\n                  <input\n                    type=\"text\"\n                    value={formData.branchName}\n                    onChange={(e) => setFormData({ ...formData, branchName: e.target.value })}\n                    className={errors.branchName ? \"error\" : \"\"}\n                    placeholder=\"Enter branch name\"\n                  />\n                  {errors.branchName && <span className=\"error-text\">{errors.branchName}</span>}\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Contact Number *</label>\n                  <input\n                    type=\"tel\"\n                    value={formData.contactNumber}\n                    onChange={(e) => setFormData({ ...formData, contactNumber: e.target.value })}\n                    className={errors.contactNumber ? \"error\" : \"\"}\n                    placeholder=\"Enter contact number\"\n                    maxLength=\"10\"\n                  />\n                  {errors.contactNumber && <span className=\"error-text\">{errors.contactNumber}</span>}\n                </div>\n\n                <div className=\"form-group full-width\">\n                  <label>Address *</label>\n                  <textarea\n                    value={formData.address}\n                    onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n                    className={errors.address ? \"error\" : \"\"}\n                    placeholder=\"Enter branch address\"\n                    rows=\"4\"\n                  />\n                  {errors.address && <span className=\"error-text\">{errors.address}</span>}\n                </div>\n              </div>\n\n              <div className=\"form-actions\">\n                <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn btn-save\">\n                  {editingBranch ? \"Update\" : \"Save\"} Branch\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      <div className=\"branches-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Branch Name</th>\n              <th>Address</th>\n              <th>Contact Number</th>\n              <th>Created Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {branches.map((branch, index) => (\n              <tr key={branch.id}>\n                <td>{index + 1}</td>\n                <td>{branch.branchName}</td>\n                <td>{branch.address}</td>\n                <td>{branch.contactNumber}</td>\n                <td>{new Date(branch.createdAt).toLocaleDateString()}</td>\n                <td>\n                  <div className=\"action-buttons\">\n                    <button className=\"btn btn-edit\" onClick={() => handleEdit(branch)} title=\"Edit Branch\">\n                      ✏️\n                    </button>\n                    <button className=\"btn btn-delete\" onClick={() => handleDelete(branch.id)} title=\"Delete Branch\">\n                      🗑️\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {branches.length === 0 && (\n          <div className=\"no-data\">\n            <p>No branches found</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BranchManagement\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}